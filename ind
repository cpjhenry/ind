#!/bin/bash
# Calculates Byzantine date & Indiction
# 2013-07-16/pjh

# See ChangeLog for changes.

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required." && exit 1

GITREP=$HOME/src/ind
HOLTMP=/tmp/ind_holidays
MTZ=EST

FULLCE=
COMMON=true

DDATE=
HHPC=
HEBREW=

ROME=
BYZANTINE=
JULIANP=

MASORETIC=

JAPANIY=
CHINALY=
BUDDHIST=

HOLDISP=true

romconvert=752  # Founding of Rome, January 1st (Julian calendar); 753 BCE
byzconvert=5508 # Byzantine year, September 1st (Julian calendar); 5509 BCE
jupconvert=4713	# Julian Period; 4713 BCE

masconvert=4000	# Masoretic; 4000 BCE
arcconvert=1352 # Anno R.C., March 21th, 1:06 a.m. ET; 1353 BCE
yodconvert=530	# Anno Inventionis; 530 BCE
mktconvert=1118 # Anno Ordinis; 1118 CE

jiyconvert=660	# Japanese Imperial year; 660 BCE
chiconvert=2697	# Chinese Lunar year, 21 January to 20 February; 2698 BCE
rocconvert=1911 # ROC year; 1912 CE

budconvert=543	# Buddhist Era or Thai Solar year; 543 BCE

ZODIAC=(Rat Ox Tiger Rabbit Dragon Snake Horse Goat Monkey Rooster Dog Pig)
CNYDATE=(02-05 01-25 02-12 02-01 01-22 02-10 01-29 02-17 02-06 01-26 02-13 02-03 01-23 02-11 01-31 02-19 02-08 01-28 02-15 02-04)
ERANAME=(- "Meiji ㍾" "Taishō ㍽" "Shōwa ㍼" "Heisei ㍻" "Reiwa ㋿")

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")

MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
MONTHL=(- January February March April May June July August September October November December)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1 00:18" +%Y)
	month=$(date -d "$1 00:18" +%0m)
	day=$(date -d "$1 00:18" +%0d)
}
ordinal() {
	local ord
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac; echo $ord
}
is_leap_year() { ## USAGE: is_leap_year [year]
	case ${1:-$(date +%Y)} in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _LY=1;;
		*) unset _LY;;
	esac
}
NWR() { # Not within range
	echo "$(basename $0): Y-M-D not within range."
	exit 1
}
displayall() {
	COMMON=true;
	HHPC=true; DDATE=true;
	HEBREW=true;
	ROME=true; BYZANTINE=true;
	JULIANP=true; MASORETIC=true;
	JAPANIY=true; CHINALY=true;
	BUDDHIST=true;
}
displaynone() {
	unset FULLCE; unset COMMON;
	unset HHPC; unset DDATE;
	unset HEBREW;
	unset ROME; unset BYZANTINE;
	unset JULIANP; unset MASORETIC;
	unset JAPANIY; unset CHINALY;
	unset BUDDHIST;

	unset VERBOSE; unset LUNAR; unset CHINESE;
}
testall() {
	unset test_var
	[ $FULLCE ]		&& test_var=true; [ $COMMON ]		&& test_var=true
	[ $HHPC ]		&& test_var=true; [ $DDATE ]		&& test_var=true
	[ $HEBREW ]		&& test_var=true
	[ $ROME ]		&& test_var=true; [ $BYZANTINE ]	&& test_var=true
	[ $JULIANP ]	&& test_var=true; [ $MASORETIC ]	&& test_var=true
	[ $JAPANIY ]	&& test_var=true; [ $CHINALY ]		&& test_var=true
	[ $BUDDHIST ]	&& test_var=true

	[ $VERBOSE ]	&& test_var=true
}

setdate today # set today's date

while getopts ":anfcpejrzuxiqby:m:d:hHFvlCoODU?" OPTION
do
	case $OPTION in
		a) 	displayall;;													# display all
		n)	displaynone;;													# display none
		f)	[ $FULLCE ]		&& unset FULLCE		|| FULLCE=true;;			# date
		c)	[ $COMMON ] 	&& unset COMMON 	|| COMMON=true;;			# common year

		p)	[ $HHPC ]		&& unset HHPC		|| HHPC=true;;				# Hanke-Henry
		e)	[ $DDATE ]		&& unset DDATE		|| DDATE=true;;				# Erisian
		j)	[ $HEBREW ] 	&& unset HEBREW 	|| HEBREW=true;;			# Hebrew

		r)	[ $ROME ] 		&& unset ROME 		|| ROME=true;;				# Roman
		z)	[ $BYZANTINE ] 	&& unset BYZANTINE 	|| BYZANTINE=true;;			# Byzantine
		u)	[ $JULIANP ]	&& unset JULIANP	|| JULIANP=true;;			# Julian period

		x)	[ $MASORETIC ]	&& unset MASORETIC	|| MASORETIC=true;;			# Masoretic

		i)	[ $JAPANIY ] 	&& unset JAPANIY	|| JAPANIY=true;;			# Japanese Imperial
		q)	[ $CHINALY ]	&& unset CHINALY	|| CHINALY=true;;			# Chinese Lunar
		b)	[ $BUDDHIST ] 	&& unset BUDDHIST 	|| BUDDHIST=true;;			# Buddhist

		y)	year=$OPTARG;;													# set year
		m)	month=$OPTARG;;													# set month
		d)	day=$OPTARG														# set day
			[ "$(egrep [[:alpha:][:blank:]-] <<< $day)" ] && setdate "$day";;

		h)	unset HOLDISP;;													# holiday display
		F)	[ $HOLCACHE ]	&& unset HOLCACHE	|| HOLCACHE=true;;			# holiday cache
		H)	bold="**" ; italics="_";;										# highlight

 		v)	[ $VERBOSE ]	&& unset VERBOSE	|| VERBOSE=true;;			# verbose
		l)	[ $LUNAR ]		&& unset LUNAR		|| displaynone;LUNAR=true;;	#- lunar diagnostic data
		C)	[ $CHINESE ]	&& unset CHINESE	|| CHINESE=true;;			#- Chinese NY diagnostics

		o)	for d in {01..31}; do											#- Observance diagnostics
				ind -c -y$year -m$month -d$d |
				sed "/^ind:/d;s/^/$month\/$d\t/;s/^0//;s/- //"
			done;exit;;
		O)	for m in {01..12}; do
				ind -y$year -m$m -o
			done;exit;;
		D)	while IFS= read -r line; do										# check dependencies
				[ $(which $line) ] || echo "Install '$line'"
			done < <(grep "DEP" $0 | sed -e "/grep DEP/d;s/^.*DEP[: ]*//")
			exit;;
		U)	cp -uv $HOME/bin/ind $GITREP/									#- update git repository
			cp -uv $HOME/bin/getusage $GITREP/
			cp -uv $HOME/bin/rnum $GITREP/
			cp -uv $HOME/share/man/man1/ind.1 $GITREP/
			cp -uv $HOME/share/man/man7/uposatha.7 $GITREP/
			cp -uv $HOME/bin/mob $GITREP/
			exit;;
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initialize
is_leap_year $year
[ $year -le 0 ] && NWR
[ $month -lt 1 -o $month -gt 12 ] && NWR
[ $day -lt 1 -o $day -gt 31 ] && NWR
[ $day -gt 30 ] && [ $month -eq 9 -o $month -eq 4 -o $month -eq 6 -o $month -eq 11 ] && NWR
[   $_LY ] && [ $month -eq 2 -a $day -gt 29 ] && NWR
[ ! $_LY ] && [ $month -eq 2 -a $day -gt 28 ] && NWR

month=$(printf "%02d" $((10#$month)))
day=$(printf "%02d" $((10#$day)))
ymd="$year-$month-$day 00:18"
hms=$(date +%T)
dow=$(date -d "$ymd" +%w)

doy=$(date -d "$ymd" +%-j) 	# day of year
iwn=$(date -d "$ymd" +%-V) 	# ISO week no
tz=$( date -d "$ymd" +%Z)	# time zone

[ "$tz" != "LMT" ] && utc=$(date -ud "${ymd:0:10} $hms $tz" "+%F %T") ||
					  utc=$(date -ud "${ymd:0:10} $hms $MTZ" "+%F %T")

# Julian calendar has 13 day delta for 20th/21st centuries
if [ $year -lt 1901 ]
	then jdelta=12; [ $month -gt 2 -a $year -eq 1900 ] && jdelta=13
	else jdelta=13; fi
[ $year -eq 1895 -a $month -eq 1 -a $day -eq 1 ] && mymd="1895-01-02 - 1 day" || mymd=${ymd:0:10}

jymd=$(date -d "$mymd - $jdelta days" +%F)
jdoy=$(date -d "$jymd" +%-j)
[ $month -eq 1 -a $day -le $jdelta ] && jdoy=0

# Set Modified Julian Date, Truncated Julian Date & Rata Die (UTC); DEP jday
if [ $(which jday) ] && [ "$utc" ]; then
	mjd=$(echo "$(jday -d $utc)-2400000.5" |bc |xargs printf '%.1f' |sed '/\-/d')
	tjd=$(echo "$(jday -d $utc)-2440000.5" |bc |cut -f1 -d"." |sed '/\-/d')
	rdi=$(echo "$(jday -d $utc)-1721424.5" |bc |cut -f1 -d"." |sed '/\-/d')
else
	unset mjd
	unset tjd
	unset rdi
fi

# Set Roman numeral year; DEP rnum
if [ $(which rnum) ]; then
	rnyear=$(rnum $year)
else rnyear="/"; fi

# Set Hanke-Henry date; DEP hh
if [ $(which hh) ] && [ $year -ge 2018 ]; then
	hhdate=$(hh -W -d$day -m$month -y$year)
else unset HHPC; fi

# Set Discordian date; DEP ddate
if [ $(which ddate) ]; then
	discord=$(ddate +'%{%e %B%} %Y' $day $month $year | sed 's/The //')
else unset DDATE; fi

# Hebrew calendar; DEP hebcal
if [ $(which hebcal) ]; then
	hebdate=$(hebcal -rh $month $day $year | cut -f2)
else unset HEBREW; fi

# Lunar and Lunisolar Calculations
(( golden=year%19+1 ))
(( dominical=((year-1)%100%4*2+(year-1)%100%7*4+(year-1)/100%4*2)%7 ))

if [ $_LY ]; then
	if [ $dominical -eq 0 ]; then dom="${DOMINI[$dominical]}${DOMINI[6]}"
	else dom="${DOMINI[$dominical]}${DOMINI[$dominical-1]}"; fi
else dom="${DOMINI[$dominical]}"; fi

# Moons; DEP phases
if [ $(which phases) ]; then
	for i in {1..12}; do
		while IFS= read -r line; do
		    newmoon+=( "$(date -d "$line UTC" +%F)" )
		    chinesemoon+=( "$(TZ=Asia/Shanghai date -d "$line UTC" +%F)" )
		done < <( phases $year $i 0 )

		while IFS= read -r line; do
		    fullmoon+=( "$(date -d "$line UTC" +%F)" )
		done < <( phases $year $i 1 )
	done

	for i in "${newmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $MOONSET ] && BLKMOON=$i
		[ "${i:5:2}" = "$month" ] && [ ! $MOONSET ] && moonphase[0]=$i && MOONSET=true
	done
	[ $MOONSET ] && [ ${ymd:0:10} = ${moonphase[0]} ] && moon=${PHASES[0]}
	[ $BLKMOON ] && [ ${ymd:0:10} = $BLKMOON ] && moon="Black Moon"
	unset MOONSET

	for i in "${fullmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $MOONSET ] && BLUMOON=$i
		[ "${i:5:2}" = "$month" ] && [ ! $MOONSET ] && moonphase[2]=$i && MOONSET=true
	done
	[ $MOONSET ] && [ ${ymd:0:10} = ${moonphase[2]} ] && moon=${PHASES[2]} && FULL=true && unset MOONSET
	[ $BLUMOON ] && [ ${ymd:0:10} = $BLUMOON ] && moon="Blue Moon" && unset FULL
	# February is shorter than a standard lunation (e.g. Feb. 2037)

	if [ $FULL ]; then
		[ $month -eq 2  ] && moon="Snow Moon"
		[ $month -eq 3  ] && moon="Lenten Moon"
		[ $month -eq 4  ] && moon="Breaking Ice Moon"
		[ $month -eq 9  ] && moon="Harvest Moon"
		[ $month -eq 10 ] && moon="Hunter's Moon"
		[ $month -eq 11 ] && moon="Beaver Moon"
	fi

	# Vassa
	vsday=$(date -d "$(phases $year 7 1 | sed -n 1p) + 1 day" +%d)

	# Chinese calendar
	cstep=1
	for i in "${chinesemoon[@]}"; do
		if [ $cstep -eq 1 ]; then
			[ "${i:5:2}" == "01" -a "${i:8:2}" -ge 21 ] && lunarmonth[$cstep]=$i && ((cstep++))
			[ "${i:5:2}" == "02" ] && lunarmonth[$cstep]=$i && ((cstep++))
		#else lunarmonth[$cstep]=$i; ((cstep++))
		fi
	done
	[ $year -eq 2027 ] && lunarmonth[1]=$(date -d "${lunarmonth[1]} - 1 day" +%F)

	# Chinese Lunar Year
	cny=${lunarmonth[1]}	
	(( cly=year+chiconvert ))
	[[ 10#$doy -ge 10#$(date -d "$cny" +%j) ]] && (( cly+=1 ))
	(( roc=year-rocconvert )); [ $roc -le 0 ] && roc="" || roc="($roc)"

	# 'year of'
	case 1 in
		$(($year< 1969))) unset cny ;;
		$(($year< 1972))) (( yearof=$year-1960 )) ;;
		$(($year< 1984))) (( yearof=$year-1972 )) ;;
		$(($year< 1996))) (( yearof=$year-1984 )) ;;
		$(($year< 2008))) (( yearof=$year-1996 )) ;;
		$(($year< 2020))) (( yearof=$year-2008 )) ;;
		$(($year< 2032))) (( yearof=$year-2020 )) ;;
		$(($year< 2044))) (( yearof=$year-2032 )) ;;
	esac

	# Diagnostics
	[ $CHINESE ] && printf "%s %s %s\n" $year ${cny:5:5} ${CNYDATE[(($year-2019))]} && exit

	if [ $LUNAR ]; then
		echo "Moon phases for ${MONTHL[10#$month]} $year:"
		for i in 0 2; do
			[ ${moonphase[$i]} ] && dmoo+=$(printf "%s  %s|" ${moonphase[$i]} "${PHASES[$i]}")
		done
		[ "$BLKMOON" ] && dmoo+=$(printf "%s  Black Moon|" $BLKMOON)
		[ "$BLUMOON" ] && dmoo+=$(printf "%s  Blue Moon |" $BLUMOON)

		echo -en "$dmoo" | sed 's/|/\n/g' | sort
		exit
	fi
else
	unset CHINALY
fi

# Simple year calculations
(( julp=year+jupconvert ))
(( jiy=year+jiyconvert ))
(( buddhist=year+budconvert ))

# Roman & Byzantine calendars are aligned to Julian calendar
(( rome=year+romconvert ))
[[ 10#$jdoy -ge 1 ]] && (( rome+=1 )) # January 1st (Day 1)

(( byzantine=year+byzconvert ))
[[ 10#$jdoy -ge 10#$(date -d "1 Sept $year" +%j) ]] && (( byzantine+=1 ))

# Indictions and ordinals
(( byzind=$byzantine%15 ))	# Byzantine
[ $byzind -eq "0" ] && byzind=15
byzind="($byzind$(ordinal $byzind))"

(( ind=($year+2)%15+1 ))	# Gregorian
ind="$ind$(ordinal $ind)"

# Beware the Ides...
[ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 10 ] && ides=15 || ides=13

# Masoretic
(( arc=year+arcconvert ))
[[ 10#$doy -ge 10#$(date -d "21 March $year" +%j) ]] && (( arc+=1 ))

(( masor=year+masconvert ))
(( yod=year+yodconvert ))
(( mkt=year-mktconvert ))

# Japanese Era Name
case 1 in
	$(($year>=2019))) ERANUM=5;jenconvert=2019;;
	$(($year>=1989))) ERANUM=4;jenconvert=1989;;
	$(($year>=1926))) ERANUM=3;jenconvert=1926;;
	$(($year>=1912))) ERANUM=2;jenconvert=1912;;
	$(($year>=1868))) ERANUM=1;jenconvert=1868;;
	$(($year<1868)))  ERANUM=0;;
esac
[ $ERANUM -eq 0 ] && jen="" || jen="($(( jen=year-(jenconvert-1) )))"

# main()
[ $FULLCE ]		&& printf "$bold%s %d %s %d$bold\n" ${DOWL[$dow]} $(( 10#$day )) ${MONTHL[10#$month]} $year
if [ $COMMON ]; then
				printf "$bold"; printf "CE %d %s %s Ind." $year $rnyear $ind; echo "$bold"
				printf "Day %3d / Week %2d %3s\n" $doy $iwn $tz
	[ $mjd ] && printf "MJD %-7s %s UTC\n" $mjd "${utc:5:5}" | sed 's/-/\//'
	[ $tjd ] && printf "TJD %-5s   " $tjd
	[ $rdi ] && printf "RD %s\n" $rdi; [ $tjd ] && [ ! $rdi ] && printf "\n"
fi

[ $HHPC ]		&& printf "%-17s H-H %4d\n" "${hhdate::${#hhdate}-5}" ${hhdate:(-4)}
[ $DDATE ]		&& printf "%-16s YOLD %d\n" "${discord::${#discord}-5}" ${discord:(-4)}
[ $HEBREW ]		&& printf "%-18s AM %d\n" "${hebdate::${#hebdate}-6}" ${hebdate:(-4)}

[ $ROME ]		&& printf "City of Rome       au %d\n" $rome
[ $BYZANTINE ]	&& printf "Byzantine %-6s   AM %d\n" $byzind $byzantine

[ $JULIANP ]	&& printf "Julian Period         %d\n" $julp

[ $MASORETIC ]	&& printf "Anno Lucis            %d\n" $masor
[ $MASORETIC ]	&& printf "Anno R.C.             %d\n" $arc
[ $MASORETIC ]	&& printf "Anno Inventionis      %d\n" $yod
[ $MASORETIC ]	&& printf "Anno Ordinis          %4d\n" $mkt

[ $JAPANIY ]	&& printf "Japanese Imp. %-5s   %d\n" "$jen" $jiy
[ $CHINALY ]	&& printf "Chinese Lunar %-5s   %d\n" "$roc" $cly
[ $BUDDHIST ]	&& printf "Buddhist Era          %d\n" $buddhist

if [ $VERBOSE ]; then
	printf "Dominical letter      %s\n" $dom
	printf "Epact                 %s\n" ${EPACTS[$golden]}
	printf "Golden number         %s\n" $golden
	printf "Ides                  %d\n" $ides
	printf "Julian calendar (%d)  %s\n" $jdelta ${jymd:5:5} | sed 's/-/\//'
	printf "Julian day of year    %03d\n" $jdoy

	[ $_LY ]	&& printf "Leap year             %s\n" $year
	[ "$moon" ]	&& printf "Phase                 %-17s\n" "$moon"
	[ "$jen" ]	&& printf "Japanese Era          %s\n" "${ERANAME[10#$ERANUM]}"
	[ $cny ] 	&& printf "Chinese New Year      %s %s\n" $(echo ${cny:5:5}|sed 's/-/\//') ${ZODIAC[10#$yearof]}
	[ $vsday ]	&& printf "Vassa                 07/%02d\n" $vsday
fi

[ ! $HOLDISP ] && [ ! $HOLCACHE ] && exit

# Buddhist observances
if [ "$moon" ]; then
	moon=$(echo "$moon Uposatha|")
	if [ $FULL ] ; then # only the first full moon
		[ $month -eq 2  ] && moon=$(echo "Sangha Day|")
		[ $month -eq 5  ] && moon=$(echo "Buddha Day|")
		[ $month -eq 7  ] && moon=$(echo "Dhamma Day|")
		[ $month -eq 10 ] && moon=$(echo "Pavarana|"); fi
	dhol+=$moon; fi
[ $vsday ] && [ $month -eq 7 -a $day -eq $vsday ] && dhol+=$(echo "Vassa|")

# Fixed non-lunar holidays
[ $day -eq $ides ]				 && dhol+=$(echo "Ides of ${MONTHL[10#$month]}|")
[ $month -eq 5 -a $day -eq 23 ]  && dhol+=$(echo "Eris Day|")
[ $month -eq 5 -a $day -eq 25 ]  && dhol+=$(echo "Towel Day|")
[ $month -eq 7 -a $day -eq 5 ]	 && dhol+=$(echo "X-Day|")

# Quarter Days
[ $month -eq 3 -a $day -eq 25 ]	 && dhol+=$(echo "Lady Day|")
[ $month -eq 6 -a $day -eq 24 ]  && dhol+=$(echo "Midsummer Day|")
[ $month -eq 9 -a $day -eq 29 ]	 && dhol+=$(echo "Michaelmas|")
[ $month -eq 12 -a $day -eq 25 ] && dhol+=$(echo "Quarter Day|")

# Cross Quarter Days
[ $month -eq 2 -a $day -eq 2 ]   && dhol+=$(echo "Candlemas|")
[ $month -eq 5 -a $day -eq 1 ]   && dhol+=$(echo "May Day|")
[ $month -eq 8 -a $day -eq 1 ]	 && dhol+=$(echo "Lammas|")
[ $month -eq 11 -a $day -eq 1 ]	 && dhol+=$(echo "All Saints'|")

# Scottish Term Days
[ $month -eq 5 -a $day -eq 15 ]  && dhol+=$(echo "Whitsun|")
[ $month -eq 11 -a $day -eq 11 ] && dhol+=$(echo "Martinmas|")

# Chinese festivals
[ $cny ] && [ ${ymd:0:10} = $cny ] && dhol+=$(echo "Year of the ${ZODIAC[10#$yearof]}|")

# Display results
if [ "$dhol" ]; then
	dhol=$(echo -en "$dhol" |sed 's/|/\n/g' |sed 's/^/- /g')
	[ $HOLCACHE ] && unset HOLDISP && echo "$dhol">$HOLTMP
	if [ $HOLDISP ]; then
		testall; [ $test_var ] && echo
		echo "$dhol" |sed "s/^- /&$italics/;s/$/$italics/"; fi; fi
