#!/bin/bash
# Calculates Byzantine date & Indiction
# 2013-07-16/pjh

# See ChangeLog for historical information.

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required." && exit 1

FULLCE=
PARTCE=
COMMON=true
LY=
DDATE=
HHPC=
HEBREW=
MASORETIC=
BYZANTINE=
ROME=
ARC=
JULIANPRD=
JAPANIY=
BUDDHIST=

hol=true
HEBHOL=

budconvert=543	# Buddhist; Thai Solar
byzconvert=5508 # Byzantine; year begins September 1st
romconvert=753  # Founding of Rome - 753 BCE
arcconvert=1353 # A.R.C., begins March 21th, 1:06 a.m. ET
jupconvert=4713	# Julian Period begins January 1st, 4713 BCE
jiyconvert=660	# Japanese Imperial Year, begins January 1st, 660 BCE
masconvert=4000	# Masoretic Text - 4000 BCE

ZODIAC=(Rat Ox Tiger Rabbit Dragon Snake Horse Goat Monkey Rooster Dog Pig)
CNYDATE=(02-05 01-25 02-12 02-01 01-22 02-10 01-29 02-17 02-06 01-26 02-13 02-03 01-23 02-11 01-31 02-19 02-08 01-28 02-15 02-04)

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")

MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
MONTHL=(- January February March April May June July August September October November December)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1" +%Y)
	month=$(date -d "$1" +%0m)
	day=$(date -d "$1" +%0d)
}
ordinal() {
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac
}
is_leap_year() { ## USAGE: is_leap_year [year]
	ily_year=${1:-$(date +%Y)}
	case $ily_year in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _IS_LEAP_YEAR=1
		return 0 ;;
		*) unset _IS_LEAP_YEAR
		return 1 ;;
	esac
}
displayall() {
	unset PARTCE; FULLCE=true; COMMON=true;
	LY=true; DDATE=true; HHPC=true; MASORETIC=true;
	HEBREW=true; ROME=true; JULIANPRD=true;
	BYZANTINE=true; ARC=true; JAPANIY=true;
	BUDDHIST=true;
}
displaynone() {
	unset PARTCE; unset FULLCE; unset COMMON;
	unset LY; unset DDATE; unset HHPC; unset MASORETIC
	unset HEBREW; unset ROME; unset JULIANPRD;
	unset BYZANTINE; unset ARC; unset JAPANIY;
	unset BUDDHIST; 

	unset LUNAR; unset CHINESE; unset LCOMMON;
	unset VERBOSE;
}

setdate today # set today's date

while getopts ":anfpcotejMrzuxiby:m:d:hHJvlLC?" OPTION
do
	case $OPTION in
		a) 	displayall;;													# display all
		n)	displaynone;;													# display none
		f)	[ $FULLCE ]		&& unset FULLCE		|| FULLCE=true;;			# full date
		p)	[ $PARTCE ]		&& unset PARTCE		|| PARTCE=true;;			# part date
		c)	[ $COMMON ] 	&& unset COMMON 	|| COMMON=true;;			# common year
		o)	[ $LY ]			&& unset LY			|| LY=true;;				# leap year
		t)	[ $HHPC ]		&& unset HHPC		|| HHPC=true;;				# Hanke-Henry
		e)	[ $DDATE ]		&& unset DDATE		|| DDATE=true;;				# Discordian
		j)	[ $HEBREW ] 	&& unset HEBREW 	|| HEBREW=true;;			# Hebrew
		M)	[ $MASORETIC ]	&& unset MASORETIC	|| MASORETIC=true;;			# Masoretic
		r)	[ $ROME ] 		&& unset ROME 		|| ROME=true;;				# Roman
		z)	[ $BYZANTINE ] 	&& unset BYZANTINE 	|| BYZANTINE=true;;			# Byzantine
		u)	[ $JULIANPRD ]	&& unset JULIANPRD	|| JULIANPRD=true;;			# Julian period
		x)	[ $ARC ]		&& unset ARC		|| ARC=true;;				# A.R.C.
		i)	[ $JAPANIY ] 	&& unset JAPANIY	|| JAPANIY=true;;			# Japanese Imperial
		b)	[ $BUDDHIST ] 	&& unset BUDDHIST 	|| BUDDHIST=true;;			# Buddhist

		y)	year=$OPTARG;;													# set year
		m)	month=$OPTARG;;													# set month
		d) 	[[ $OPTARG =~ [A-Za-z\ ] ]] && setdate "$OPTARG"||day=$OPTARG;;	# set day

		h)	unset hol;;														# disable holidays
		H)	bold="**" ; italics="_";;										# highlight
		J)	[ $HEBHOL ]		&& unset HEBHOL		|| HEBHOL=true;;			# Hebrew holidays
 		v)	[ $VERBOSE ]	&& unset VERBOSE	|| VERBOSE=true;;			# verbose

		l)	[ $LUNAR ]		&& unset LUNAR		|| displaynone;LUNAR=true;;	# lunar diagnostic data
		L)	[ $LCOMMON ]	&& unset LCOMMON	|| LCOMMON=true;;			# lunar common data
		C)	[ $CHINESE ]	&& unset CHINESE	|| CHINESE=true;;			# Chinese diagnostic data
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initialize
[ $year -le 0 ] && echo "$(basename $0): Date must be positive" && exit 1
[ $month -lt 1 -o $month -gt 12 ] && echo "$(basename $0): Month not within range" && exit 1
setdate $year-$month-$day

ymd=$year-$month-$day
hms=$(date +%H:%M:%S)
dow=$(date -d "$ymd" +%w)

doy=$(date -d "$ymd" +%-j) 	# day of year
iwn=$(date -d "$ymd" +%-V) 	# ISO week no
tz=$(date -d "$ymd" +%Z)	# time zone
utc=$(date -ud "$ymd $hms $tz" "+%Y-%0m-%0d %H:%M:%S")

# Set Modified Julian Date (UTC); 'jday' utility required
if [ $(which jday) ] ; then
	mjd=$(echo "$(jday -d $utc)-2400000.5" | bc)
else mjd="00000.0"; fi

# Set Hanke-Henry date; 'hh' utility required
if [ $(which hh) ]; then
	hhdate=$(hh -W -d$day -m$month -y$year)
	hhleng=${#hhdate}; (( hhleng=hhleng-5 ))
	hhdmon=${hhdate:0:$hhleng}
	hhyear=${hhdate:(-4)}
else unset HHPC; fi

# Set Discordian date; 'ddate' utility required
if [ $(which ddate) ]; then
	YOLD=$(ddate +'%Y' $day $month $year)
	discord=$(ddate +'%{%e %B%}' $day $month $year | sed 's/The //')
	dischol=$(ddate +'%N%H' $day $month $year)
else unset DDATE; fi

# Set Roman numeral year; 'rnum' utility required
if [ $(which rnum) ]; then
	rnyear=$(rnum $year)
else rnyear="/"; fi

# Byzantine calendar is aligned to Julian
# Julian calendar has 13 day delta for 20th/21st centuries
jcal=$(date -d "$ymd - 13 days" +%F)
((byzantine=year+byzconvert))
[[ 10#$(date -d "$jcal" +%j) -ge 10#$(date -d "1 Sept" +%j) ]] && ((byzantine+=1))

# Hebrew calendar; 'hebcal' utility required
# Jewish observances begin the evening before at sunset
if [ $(which hebcal) ]; then
	hebdate=$(hebcal -Th $month $day $year | sed -n 1p | sed 's/,.*$//')
	hebyear=$(hebcal -Th $month $day $year | sed -n 1p | sed 's/.*, //')
	hebyr=$(hebcal -Th 01 01 $year | sed -n 1p | sed 's/.*, //')

	passover=$(hebcal -rh Nissan 15 $hebyr | cut -f1)
	passover=$(date -d "$passover - 1 day" +%F)

	tishabav=$(hebcal -rh Av 9 $hebyr | cut -f1)
	# Tish'a B'Av is never observed on Shabbat.
	[[ $(date -d "$tishabav" +%w) < 6 ]] && tishabav=$(date -d "$tishabav - 1 day" +%F)

	hashanah=$(hebcal -rh Tishrey 1 $(($hebyr + 1)) | cut -f1)
	hashanah=$(date -d "$hashanah - 1 day" +%F)

	yomkippur=$(hebcal -rh Tishrey 10 $(($hebyr +1)) | cut -f1)
	yomkippur=$(date -d "$yomkippur - 1 day" +%F)

	hanukkah=$(hebcal -rh Kislev 25 $(($hebyr +1)) | cut -f1)
	hanukkah=$(date -d "$hanukkah - 1 day" +%F)

	unset hebyr
else
	unset HEBREW
fi

# Lent and other Easter-based holidays
easter=$(date -d "$(ncal -e)" +%F)
carnival=$(date -d "$easter - 47 days" +%F)
lent=$(date -d "$easter - 46 days" +%F)

# Advent
xmasdow=$(date -d "$year-12-25" +%w)
xmaswks=3
[ $xmasdow -eq 0 ] && (( xmaswks=xmaswks+1 ))
(( xmasadj= -1 * ((xmaswks * 7) + xmasdow) ))
advent=$(date -d "$year-12-25 $xmasadj days" +%F)

# Lunar and Lunisolar Calculations
(( golden=year%19+1 ))
(( dominical=((year-1)%100%4*2+(year-1)%100%7*4+(year-1)/100%4*2)%7 ))

is_leap_year $year
if [ $_IS_LEAP_YEAR ]; then
	leap=" LY"
	if [ $dominical -eq 0 ]; then dom="${DOMINI[$dominical]}${DOMINI[6]}"
	else dom="${DOMINI[$dominical]}${DOMINI[$dominical-1]}"; fi
else
	unset leap
	dom="${DOMINI[$dominical]}"
fi
[ ! $LY ] && unset leap

# Moons
if [ $(which phases) ]; then
	for i in {1..12}; do
		while IFS= read -r line; do
		    newmoon+=( "$(date -d "$line UTC" +%F)" )
		    chinesemoon+=( "$(TZ=Asia/Shanghai date -d "$line UTC" +%F)" )
		done < <( phases $year $i 0 )

		while IFS= read -r line; do
		    fullmoon+=( "$(date -d "$line UTC" +%F)" )
		done < <( phases $year $i 1 )
	done

	for i in "${newmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $moonset ] && bkmoon=$i
		[ "${i:5:2}" = "$month" ] && [ ! $moonset ] && moonphase[0]=$i && moonset=yes
		[ "$i" = "$ymd" ] && moon=${PHASES[0]}
		[ "$bkmoon" = "$ymd" ] && moon="Black Moon"
	done
	unset moonset
	for i in "${fullmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $moonset ] && blmoon=$i
		[ "${i:5:2}" = "$month" ] && [ ! $moonset ] && moonphase[2]=$i && moonset=yes
		[ "$i" = "$ymd" ] && moon=${PHASES[2]} && full=yes
		[ "$blmoon" = "$ymd" ] && moon="Blue Moon" && unset full
	done

	# Vassa
	vsday=$(date -d "$(phases $year 7 1 | sed -n 1p) + 1 day" +%d)

	# Chinese New Year begins 21 January to 20 February; calculate subsequent months
	cstep=1; for i in "${chinesemoon[@]}"; do
		if [ $cstep -eq 1 ]; then
			[ "${i:5:2}" = "01" ] && [ "${i:8:2}" -ge 21 ] && lunarmonth[$cstep]=$i && ((cstep++))
			[ "${i:5:2}" = "02" ] && lunarmonth[$cstep]=$i && ((cstep++))
		else
			lunarmonth[$cstep]=$i
			((cstep++))
		fi
	done

	[ $year -eq 2027 ] && lunarmonth[1]=$(date -d "${lunarmonth[1]} - 1 day" +%F)
	cny=${lunarmonth[1]}	
	[ $VERBOSE ] && echo "Chinese New Year $year ${cny:5:5} ${CNYDATE[(($year-2019))]}"

	# 'year of'
	case 1 in
		$(($year< 2020))) (( yearof=$year-2008 )) ;;
		$(($year< 2032))) (( yearof=$year-2020 )) ;;
		$(($year< 2044))) (( yearof=$year-2032 )) ;;
	esac

	# Chinese festivals
	qingming="$year-04-05"
	duanwufe=$(date -d "${lunarmonth[5]} + 4 days" +%F)
	ghostfes=$(date -d "${lunarmonth[7]} + 14 days" +%F)
	midautum=$(date -d "${lunarmonth[8]} + 14 days" +%F)
	doubleni=$(date -d "${lunarmonth[9]} + 8 days" +%F)
else
	unset LUNAR
fi

# Simple year calculations
(( masor=year+masconvert ))
(( rome=year+romconvert ))
(( julp=year+jupconvert ))
(( jiy=year+jiyconvert ))
(( buddhist=year+budconvert ))

# Beware the Ides...
[ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 10 ] && ides=15 || ides=13

# Indictions and ordinals
(( ind=($year+2)%15+1 ))	# set Gregorian indiction
ordinal $ind; gord=$ord 	# set Gregorian ordinal

(( byzind=$byzantine%15 ))	# set Byzantine indiction
[ $byzind -eq "0" ] && byzind=15
ordinal $byzind; bord=$ord	# set Byzantine ordinal

ordinal $(( 10#$day )) 		# set standard ordinal

# ARC
if [ $month -lt 3 ]; then (( arc=year+arcconvert-1 ))
elif [ $month -eq 3 ]; then
	if [ $day -lt 21 ]; then (( arc=year+arcconvert-1 ))
	else (( arc=year+arcconvert )); fi
else (( arc=year+arcconvert )); fi

# main()
[ $FULLCE ]		&& printf "$bold%s %d %s %d$bold\n" ${DOWL[$dow]} $(( 10#$day )) ${MONTHL[10#$month]} $year
[ $PARTCE ]		&& printf "$bold%s %d%s %s$bold\n" ${DOWL[$dow]} $(( 10#$day )) $ord ${MONTHL[10#$month]}

[ $COMMON ]		&& printf "$bold" && printf "CE %d %s %2d%s Ind." $year $rnyear $ind $gord && echo "$leap$bold"
[ $COMMON ]		&& printf "Day %3d / Week %2d %3s\n" $doy $iwn $tz
[ $COMMON ]		&& printf "MJD %s %s UTC\n" ${mjd:0:7} "${utc:5:5}" | sed 's/-/\//'

[ $HHPC ]		&& printf "%-17s H-H %4d\n" "$hhdmon" $hhyear
[ $DDATE ]		&& printf "%-16s YOLD %d\n" "$discord" $YOLD
[ $HEBREW ]		&& printf "%-18s AM %d\n" "$hebdate" $hebyear

[ $MASORETIC ]	&& printf "Masoretic          AL %d\n" $masor
[ $ROME ]		&& printf "City of Rome       au %d\n" $rome
[ $BYZANTINE ]	&& printf "Byzantine (%2d%s)   AM %d\n" $byzind $bord $byzantine
[ $JULIANPRD ]	&& printf "Julian Period         %d\n" $julp
[ $ARC ]		&& printf "A.R.C.                %d\n" $arc
[ $JAPANIY ]	&& printf "Japanese Imperial     %d\n" $jiy
[ $BUDDHIST ]	&& printf "Buddhist Era          %d\n" $buddhist

[ $VERBOSE ]	&& printf "Julian calendar       %s\n" ${jcal:5:5} | sed 's/-/\//'
[ $VERBOSE ]	&& printf "Dominical letter      %s\n" $dom
[ $VERBOSE ]	&& printf "Epact                 %s\n" ${EPACTS[$golden]}
[ $VERBOSE ]	&& printf "Golden number         %s\n" $golden
[ $VERBOSE ]	&& printf "Ides                  %d\n" $ides

# Lunar and Hebrew observances and holidays
if [ $hol ]; then
	if [ $COMMON ]; then	
		[ "$ymd" = "$carnival"	] && dhol+=$(echo "Carnival|")
		[ "$ymd" = "$lent"		] && dhol+=$(echo "Lent|")
		[ "$ymd" = "$easter"	] && dhol+=$(echo "Pascha (Lent ends)|")
		[ "$ymd" = "$advent"	] && dhol+=$(echo "Advent begins|")

		[ "$ymd" = "$cny" 		] && dhol+=$(echo "Chinese New Year (Year of the ${ZODIAC[10#$yearof]})|")

		[ "$ymd" = "$qingming"	] && dhol+=$(echo "Tomb Sweeping Festival|")
		[ "$ymd" = "$duanwufe"	] && dhol+=$(echo "Dragon Boat Festival|")
		[ "$ymd" = "$ghostfes"	] && dhol+=$(echo "Ghost Festival|")
		[ "$ymd" = "$midautum"	] && dhol+=$(echo "Mid-Autumn Moon Festival|")
		[ "$ymd" = "$doubleni"	] && dhol+=$(echo "Double Nine Festival|")
	fi

	if [ $HEBHOL ]; then
		[ "$ymd" = "$passover"	] && dhol+=$(echo "Passover|")
		[ "$ymd" = "$tishabav"	] && dhol+=$(echo "Tish'a B'Av|")
		[ "$ymd" = "$hashanah"	] && dhol+=$(echo "Rosh Hashanah|")
		[ "$ymd" = "$yomkippur"	] && dhol+=$(echo "Yom Kippur|")
		[ "$ymd" = "$hanukkah"	] && dhol+=$(echo "Hanukkah|")
	fi

	if [ $BUDDHIST ]; then
		[ $full ] && [ $month -eq 9 ] && moon="Harvest Moon"
		[ "$moon" != "" ] && observance="$moon Uposatha"
		
		# only the first full moon
		if [ $full ] ; then
			[ $month -eq 2  ] && observance="Sangha day"
			[ $month -eq 5  ] && observance="Buddha day"
			[ $month -eq 7  ] && observance="Dhamma day (Vassa begins tomorrow)"
			[ $month -eq 10 ] && observance="Pavarana (Vassa ends)"
			[ $month -eq 11 ] && observance="Anapanasati day"
		fi
		[ $month -eq 7 -a $day -eq $vsday ]	&& observance="Vassa"
		[ "$observance" != "" ]  && dhol+=$(echo "$observance|")
	fi

	# Fixed non-lunar holidays
	[ $DDATE ] && [ "$dischol" ] && dhol+=$(echo "$bold$dischol$bold|")
	[ $ARC ] && [ $month -eq 3 -a $day -eq 21 ] && dhol+=$(echo "R+C New Year Feast|")
	[ $ARC ] && [ $month -eq 9 -a $day -eq 23 ] && dhol+=$(echo "R+C Outdoor Fete|")

	if [ $COMMON ]; then
		[ $day -eq $ides ] && dhol+=$(echo "Ides of ${MONTHL[10#$month]}|")

		[ $month -eq 1 -a $day -eq 1 ]	 && dhol+=$(echo "Hogmanay|")
		[ $month -eq 1 -a $day -eq 2 ]	 && dhol+=$(echo "Hogmanay|")
		[ $month -eq 2 -a $day -eq 2 ]   && dhol+=$(echo "Groundhog Day (x-qtr)|")
		[ $month -eq 3 -a $day -eq 25 ]	 && dhol+=$(echo "Lady Day (qtr)|")
		[ $month -eq 4 -a $day -eq 1 -a ${hms:0:2} -lt 12 ] && dhol+=$(echo "April Fools' Day|")
		[ $month -eq 5 -a $day -eq 1 ]   && dhol+=$(echo "May Day (x-qtr)|")
		[ $month -eq 5 -a $day -eq 25 ]  && dhol+=$(echo "Towel Day|")
		[ $month -eq 6 -a $day -eq 24 ]  && dhol+=$(echo "Midsummer Day (qtr)|")
		[ $month -eq 7 -a $day -eq 2 ]	 && dhol+=$(echo "Mid Year's Day|")
		[ $month -eq 7 -a $day -eq 5 ]	 && dhol+=$(echo "X-Day|")
		[ $month -eq 8 -a $day -eq 1 ]	 && dhol+=$(echo "Lammas Day (x-qtr)|")
		[ $month -eq 9 -a $day -eq 29 ]	 && dhol+=$(echo "Michaelmas (qtr)|")
		[ $month -eq 10 -a $day -eq 13 ] && dhol+=$(echo "No Bra Day (cancer awareness)|")
		[ $month -eq 10 -a $day -eq 31 ] && dhol+=$(echo "Halloween (x-qtr)|")
		[ $month -eq 11 -a $day -eq 11 ] && dhol+=$(echo "Martlemass|")
		[ $month -eq 12 -a $day -eq 31 ] && dhol+=$(echo "Hogmanay|")
	fi
fi

# Display results
[ $hol ] && [ "$dhol" ] && echo "- - -" && echo -en "$dhol" | sed 's/|/\n/g' | sed "s/^/$italics/;s/$/$italics/"

# Lunar diagnostic data
if [ $LUNAR ]; then
	[ $VERBOSE ] && echo
	echo "Moon phases for ${MONTHL[10#$month]} $year:"
	for i in 0 2; do
		dmoo+=$(printf "%s  %s|" ${moonphase[$i]} "${PHASES[$i]}")
	done
	[ "$bkmoon" ] && dmoo+=$(printf "%s  Black Moon|" $bkmoon)
	[ "$blmoon" ] && dmoo+=$(printf "%s  Blue Moon |" $blmoon)

	echo -en "$dmoo" | sed 's/|/\n/g' | sort
	
	if [ $LCOMMON ]; then
		dobs+=$(printf "%s  Passover, Pilgrimage, the Exodus from Egypt (sunset)|" $passover)
		dobs+=$(printf "%s  Tish'a B'Av, Day of Mourning, destruction (sunset)|" $tishabav)
		dobs+=$(printf "%s  Rosh Hashanah, New Year (sunset)|" $hashanah)
		dobs+=$(printf "%s  Yom Kippur, Day of Atonement (sunset)|" $yomkippur)
		dobs+=$(printf "%s  Hanukkah, Festival of Lights, rededication (sunset)|" $hanukkah)

		dobs+=$(printf "%s  Lent, 40-day period of penitential preparation|" $lent)
		dobs+=$(printf "%s  Pascha, central liturgical feast (Lent ends)|" $easter)
		dobs+=$(printf "%s  Advent, First season of the church year|" $advent)

		dobs+=$(printf "$year-07-%02d  Vassa, Buddhist monastic retreat|" $vsday)
		dobs+=$(printf "$cny  Chinese New Year (Year of the ${ZODIAC[10#$yearof]})|")
	fi
	if [ $CHINESE ]; then
		dobs+=$(printf "$qingming  Qingming Festival, spring outing, tomb-sweeping|")
		dobs+=$(printf "$duanwufe  Dragon Boat Festival, high summer, wine|")
		dobs+=$(printf "$ghostfes  Ghost Festival, burn fake money|")
		dobs+=$(printf "$midautum  Moon Festival, family meal, mooncake|")
		dobs+=$(printf "$doubleni  Chongyang Festival, autumn outing|")
	fi
	if [ "$dobs" ]; then
		echo
		echo "Lunar Holidays & Observances:"
		echo -en "$dobs" | sed 's/|/\n/g' | sort
	fi
	if [ $CHINESE ]; then
		echo
		echo "Chinese Months:"
		for i in {1..6}; do 
			printf "%2d ${lunarmonth[$i]}  |  %2d ${lunarmonth[$i+6]}\n" $i $(($i+6))
		done
	fi
fi
