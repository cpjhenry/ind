#!/bin/bash
# Calculates Byzantine date & Indiction
# 2013-07-16/pjh

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required." && exit 1

FULLCE=
PARTCE=
COMMON=true
LY=
DDATE=
HHPC=
HEBREW=
BYZANTINE=
ROME=
ARC=
JULIANPRD=
JAPANIY=
BUDDHIST=
LUNAR=
hol=true;

budconvert=543	# Thai Solar
hebconvert=3760 # Hebrew; year begins in September (day varies)
byzconvert=5508 # Byzantine; year begins September 1st
romconvert=753  # Founding of Rome - 753 BCE
arcconvert=1353 # A.R.C., begins March 21th, 1:06 a.m. ET
jupconvert=4713	# Julian Period begins January 1st, 4713 BCE
jiyconvert=660	# Japanese Imperial Year, begins January 1st, 660 BCE

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")

MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
MONTHL=(- January February March April May June July August September October November December)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1" +%Y)
	month=$(date -d "$1" +%0m)
	day=$(date -d "$1" +%0d)
	dow=$(date -d "$1" +%w)
	hour=$(date +%H)
}
ordinal() {
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac
}
is_leap_year() { ## USAGE: is_leap_year [year]
	ily_year=${1:-`date +%Y`}
	case $ily_year in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _IS_LEAP_YEAR=1
		return 0 ;;
		*) unset _IS_LEAP_YEAR
		return 1 ;;
	esac
}
displayall() {
	unset PARTCE; FULLCE=true; COMMON=true;
	LY=true; DDATE=true; HHPC=true;
	HEBREW=true; ROME=true; JULIANPRD=true;
	BYZANTINE=true; ARC=true; JAPANIY=true;
	BUDDHIST=true; LUNAR=;
}
displaynone() {
	unset PARTCE; unset FULLCE; unset COMMON;
	unset LY; unset DDATE; unset HHPC;
	unset HEBREW; unset ROME; unset JULIANPRD;
	unset BYZANTINE; unset ARC; unset JAPANIY;
	unset BUDDHIST; unset LUNAR;
}

setdate today # set initial date

while getopts ":anfpcoetjruzxibly:m:d:hHv?" OPTION
do
	case $OPTION in
		a) 	displayall;;											# display all
		n)	displaynone;;											# display none
		f)	[ $FULLCE ]		&& unset FULLCE		|| FULLCE=true;;	# full common date
		p)	[ $PARTCE ]		&& unset PARTCE		|| PARTCE=true;;	# part common date
		c)	[ $COMMON ] 	&& unset COMMON 	|| COMMON=true;;	# common year
		o)	[ $LY ]			&& unset LY			|| LY=true;;		# leap year
		e)	[ $DDATE ]		&& unset DDATE		|| DDATE=true;;		# Discordian
		t)	[ $HHPC ]		&& unset HHPC		|| HHPC=true;;		# Hanke-Henry
		j)	[ $HEBREW ] 	&& unset HEBREW 	|| HEBREW=true;;	# Hebrew
		r)	[ $ROME ] 		&& unset ROME 		|| ROME=true;;		# Roman
		u)	[ $JULIANPRD ]	&& unset JULIANPRD	|| JULIANPRD=true;;	# Julian period
		z)	[ $BYZANTINE ] 	&& unset BYZANTINE 	|| BYZANTINE=true;;	# Byzantine
		x)	[ $ARC ]		&& unset ARC		|| ARC=true;;		# A.R.C.
		i)	[ $JAPANIY ] 	&& unset JAPANIY	|| JAPANIY=true;;	# Japanese Imperial
		b)	[ $BUDDHIST ] 	&& unset BUDDHIST 	|| BUDDHIST=true;;	# Buddhist
		l)	[ $LUNAR ]		&& unset LUNAR		|| LUNAR=true;;		# Lunar data

		y)	[ $year -le 0 ] && echo $(basename $0): Date must be positive. && echo && exit 1	# set year
			setdate $OPTARG-$month-$day;;
		m)	[ $month -lt 1 -o $month -gt 12 ] && echo $(basename $0): Month not within range.&& echo && exit 1	# set month
			setdate $year-$OPTARG-$day;;
		d) 	if [[ $OPTARG =~ [A-Za-z\ ] ]]; then setdate "$OPTARG"	# set day
			else setdate $year-$month-$OPTARG; fi;;

		h)	unset hol;;												# disable holidays
		H)	bold="**" ; italics="_";;								# highlight
		v)	VERBOSE=true; displaynone;;								# verbose / diagnostics
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initial settings
ymd="$year-$month-$day"
jd=$(date -d $ymd +%-j) 	# Julian day
iwn=$(date -d $ymd +%-V) 	# ISO week no
tz=$(date -d $ymd +%Z)		# time zone

# Set Discordian date; 'ddate' utility required
if [ $(which ddate) ]; then
	YOLD=$(ddate +'%Y' $day $month $year)
	discord=$(ddate +'%{%e %B%}' $day $month $year | sed 's/The //')
	dischol=$(ddate +'%N%H' $day $month $year)
else unset DDATE; fi

# ; Set Hanke-Henry date; 'hh' utility required
if [ $(which hh) ]; then
	hhdate=$(hh -y$year -m$month -d$day)
else unset HHPC; fi

# Enable lunar calculations
[ $(which remind) ] && [ $hol ] && rem=$(which remind) || unset rem

# Byzantine and Hebrew calendars starts in September
if [ $month -ge 9 ]; then
	(( byzantine=year+byzconvert+1 ))
	(( hebrew=year+hebconvert+1 ))
else
	(( byzantine=year+byzconvert ))
	(( hebrew=year+hebconvert ))
fi

# More sophisticated hebrew date
# Jewish observances begin the evening before at sunset
if [ $rem ] ; then
	sunset=$((echo "BANNER %"; echo "MSG [sunset(today())]")	| $rem - $ymd | sed '/^$/d')
	hebyr=$( (echo "BANNER %"; echo "MSG [hebyear(today())]")	| $rem - $ymd | sed '/^$/d')
	hebmon=$((echo "BANNER %"; echo "MSG [hebmon(today())]")	| $rem - $ymd | sed '/^$/d')
	hebday=$((echo "BANNER %"; echo "MSG [hebday(today())]")	| $rem - $ymd | sed '/^$/d')
	hebdaymonyr="$hebday $hebmon $hebyr"

	passover=$((echo "BANNER %"; echo "MSG [hebdate(15, \"Nisan\")]") | $rem - $year-01-01 | sed '/^$/d')
	passover=$(date -d "$passover - 1 day" +%Y-%m-%d)
	passoverends=$((echo "BANNER %"; echo "MSG [hebdate(21, \"Nisan\")]") | $rem - $year-01-01 | sed '/^$/d')

	shavuot=$((echo "BANNER %"; echo "MSG [hebdate(6, \"Sivan\")]") | $rem - $year-01-01 | sed '/^$/d')
	shavuot=$(date -d "$shavuot - 1 day" +%Y-%m-%d)

	tishabav=$((echo "BANNER %"; echo "MSG [hebdate(9, \"Av\")]") | $rem - $year-01-01 | sed '/^$/d')
	tishabav=$(date -d "$tishabav - 1 day" +%Y-%m-%d)

	hashanah=$((echo "BANNER %"; echo "MSG [hebdate(1, \"Tishrey\")]") | $rem - $year-01-01 | sed '/^$/d')
	hashanah=$(date -d "$hashanah - 1 day" +%Y-%m-%d)
	hebnyrm=$(echo $hashanah | sed 's/^....-//;s/-..$//;s/^0//') # leading zeros stripped
	hebnyrd=$(echo $hashanah | sed 's/^....-..-//;s/^0//') # leading zeros stripped

	yomkippur=$((echo "BANNER %"; echo "MSG [hebdate(10, \"Tishrey\")]") | $rem - $year-01-01 | sed '/^$/d')
	yomkippur=$(date -d "$yomkippur - 1 day" +%Y-%m-%d)

	sukkot=$((echo "BANNER %"; echo "MSG [hebdate(15, \"Tishrey\")]") | $rem - $year-01-01 | sed '/^$/d')
	sukkot=$(date -d "$sukkot - 1 day" +%Y-%m-%d)

	hanukkah=$((echo "BANNER %"; echo "MSG [hebdate(25, \"Kislev\")]") | $rem - $year-01-01 | sed '/^$/d')
	hanukkah=$(date -d "$hanukkah - 1 day" +%Y-%m-%d)
else
	hebdaymonyr="$hebrew"
fi

# Calculate Lent
if [ $rem ] ; then
	# Easter-based
	easter=$((echo "BANNER %"; echo "MSG [easterdate(year(today()))]")	| $rem - $ymd | sed '/^$/d')
	carnival=$(date -d "$easter - 47 days" +%Y-%m-%d)
	lent=$(date -d "$easter - 46 days" +%Y-%m-%d)
	pentecost=$(date -d "$easter + 49 days" +%Y-%m-%d)

	# Advent
	xmasdow=$(date -d "$year-12-25" +%w)
	xmaswks=3
	[ $xmasdow -eq 0 ] && (( xmaswks=xmaswks+1 ))
	(( xmasadj= -1 * ((xmaswks * 7) + xmasdow) ))
	advent=$(date -d "$year-12-25 $xmasadj days" +%Y-%m-%d)
fi

# Lunar and Lunisolar Calculations
(( golden=year%19+1 ))
(( dominical=((year-1)%100%4*2+(year-1)%100%7*4+(year-1)/100%4*2)%7 ))

is_leap_year $year
if [ $_IS_LEAP_YEAR ]; then
	leap="(Leap Year)"
	if [ $dominical -eq 0 ]; then 
		dom="${DOMINI[$dominical]}${DOMINI[6]}"
	else
		dom="${DOMINI[$dominical]}${DOMINI[$dominical-1]}"
	fi
else
	leap=""
	dom="${DOMINI[$dominical]}"
fi
[ ! $LY ] && leap=""

if [ $rem ] ; then
	for i in $(seq 0 3); do
		moonphase[$i]=$((echo "BANNER %"; echo "MSG [moondate($i, today(), 12:00)]") | $rem - $year-$month-01 | sed '/^$/d')
		[ "${moonphase[$i]}" = "$ymd" ] && moon=${PHASES[$i]}
	done
	if [ "$moon" = "Full Moon" ] ; then
		[ $month -eq 9 ] && moon="Full Harvest Moon"
		full=yes
	fi

	# calculate black & blue moons
	nnmoon=$((echo "BANNER %"; echo "MSG [moondate(0, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	nnmont=$((echo "BANNER %"; echo "MSG [moontime(0, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	if [ "$(echo $nnmoon | sed 's/-..$//')" = "$year-$month" ] ; then
		[ "$nnmoon" != "${moonphase[0]}" ] && [ "$nnmoon" = "$ymd" ] && moon="Black Moon"
	fi
	nqmoon=$((echo "BANNER %"; echo "MSG [moondate(1, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	nqmont=$((echo "BANNER %"; echo "MSG [moontime(1, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	if [ "$(echo $nqmoon | sed 's/-..$//')" = "$year-$month" ] ; then
		[ "$nqmoon" != "${moonphase[1]}" ] && [ "$nqmoon" = "$ymd" ] && moon="2nd First Quarter"
	fi
	nfmoon=$((echo "BANNER %"; echo "MSG [moondate(2, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	nfmont=$((echo "BANNER %"; echo "MSG [moontime(2, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	if [ "$(echo $nfmoon | sed 's/-..$//')" = "$year-$month" ] ; then
		[ "$nfmoon" != "${moonphase[2]}" ] && [ "$nfmoon" = "$ymd" ] && moon="Blue Moon"
	fi
	nlmoon=$((echo "BANNER %"; echo "MSG [moondate(3, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	nlmont=$((echo "BANNER %"; echo "MSG [moontime(3, today(), 05:00)]") | $rem - $year-$month-$day | sed '/^$/d')
	if [ "$(echo $nlmoon | sed 's/-..$//')" = "$year-$month" ] ; then
		[ "$nlmoon" != "${moonphase[3]}" ] && [ "$nlmoon" = "$ymd" ] && moon="2nd Last Quarter"
	fi

	# calculate Vassa
	vsday=$((echo "BANNER %"; echo "MSG [moondate(2)+1]") | $rem - $year-07-01 | sed '/^$/d;s/^....-..-//;s/^0//')

	# calculate Chinese New Year
	cny=$((echo "BANNER %"; echo "MSG [moondate(0, today())]") | $rem - $year-01-01 | sed '/^$/d')
	cny=$(date -d "$cny + 1 day" +%d)
	if [ $cny -lt 21 ]; then
		cny=$((echo "BANNER %"; echo "MSG [moondate(0, today(), 12:00)]") | $rem - $year-01-$cny | sed '/^$/d')
		cny=$(date -d "$cny +1 day" +%Y-%m-%d)
	else
		cny="$year-01-$cny"
	fi
	[ $year = 2022 ] && cny=$(date -d "$cny -1 day" +%Y-%m-%d)
	[ $year -ge 2025 ] && [ $year -lt 2030 ] && cny=$(date -d "$cny -1 day" +%Y-%m-%d)
fi

# Solar cycle
(( solar=($year+6)%11 ))
[ $solar -eq 0 ] && solar=11

# Simple year calculations
(( rome=year+romconvert ))
(( julp=year+jupconvert ))
(( jiy=year+jiyconvert ))
(( buddhist=year+budconvert ))

# Beware the Ides...
[ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 10 ] && ides=15 || ides=13

# Indictions and ordinals
(( ind=($year+2)%15+1 ))	# set Gregorian indiction
ordinal $ind; gord=$ord 	# set Gregorian ordinal

(( byzind=$byzantine%15 ))	# set Byzantine indiction
[ $byzind -eq "0" ] && byzind=15
ordinal $byzind; bord=$ord	# set Byzantine ordinal

ordinal $(( 10#$day )) 		# set standard ordinal

# ARC calculations
if [ $month -lt 3 ]; then
	(( arc=year+arcconvert-1 ))
elif [ $month -eq 3 ]; then
	if [ $day -lt 21 ]; then
		(( arc=year+arcconvert-1 ))
	else
		(( arc=year+arcconvert ))
	fi
else
	(( arc=year+arcconvert ))
fi

# main()
[ $FULLCE ]		&& printf "$bold%s %d %s %d$bold\n" ${DOWL[$dow]} $(( 10#$day )) ${MONTHL[10#$month]} $year
[ $PARTCE ]		&& printf "$bold%s %d%s %s$bold\n" ${DOWL[$dow]} $(( 10#$day )) $ord ${MONTHL[10#$month]}
[ $COMMON ]		&& printf "CE %d / %2d%s Ind. " $year $ind $gord && echo $leap
[ $COMMON ]		&& printf "Day %3d / Week %2d %s\n" $jd $iwn $tz
[ $DDATE ]		&& printf "%-16s %d\n" "$discord" $YOLD
[ $HHPC ]		&& printf "H-H %17s\n" "$hhdate"
[ $HEBREW ]		&& printf "AM  %17s\n" "$hebdaymonyr"
[ $ROME ]		&& printf "City of Rome     %d\n" $rome
[ $JULIANPRD ]	&& printf "Julian Period    %d\n" $julp
[ $BYZANTINE ]	&& printf "Byzantine   %d%s %d\n" $byzind $bord $byzantine
[ $ARC ]		&& printf "A.R.C.           %d\n" $arc
[ $JAPANIY ]	&& printf "Japanese Imp.    %d\n" $jiy
[ $BUDDHIST ]	&& printf "Buddhist Era     %d\n" $buddhist

[ $LUNAR ] 		&& printf "Dominical        %s\n" $dom
[ $LUNAR ] 		&& printf "Epact            %s\n" ${EPACTS[$golden]}
[ $LUNAR ]	 	&& printf "Lunar cycle      %s\n" $golden
[ $LUNAR ]		&& printf "Solar cycle      %s\n" $solar
[ $LUNAR ]		&& printf "Ides             %d\n" $ides
[ $LUNAR ]		&& for i in $(seq 0 3); do printf "%-16s %s\n" "${PHASES[$i]}" $(echo ${moonphase[$i]} | sed 's/^....-//;s/-/\//'); done
[ $LUNAR ]		&& printf "Sunset today     %s\n" $sunset

# Lunar and Hebrew observances and holidays
if [ $rem ]; then
	if [ $COMMON ]; then	
		[ "$ymd" = "$passover" ] && dhol+=$(echo "Passover begins ($sunset)|")
		[ "$ymd" = "$hashanah" ] && dhol+=$(echo "Rosh Hashanah begins ($sunset)|")
		[ "$ymd" = "$hanukkah" ] && dhol+=$(echo "Hanukkah begins at ($sunset)|")

		[ "$ymd" = "$lent" ] 	 && dhol+=$(echo "Lent|")
		[ "$ymd" = "$easter" ] 	 && dhol+=$(echo "Pascha (Lent ends)|")
		[ "$ymd" = "$advent" ] 	 && dhol+=$(echo "Advent begins|")

		[ "$ymd" = "$cny" ]		 && dhol+=$(echo "Chinese New Year|")
	fi
	if [ $BUDDHIST ]; then
		[ "$moon" != "" ] && observance="$moon Uposatha"
		
		# only the first full moon
		if [ "$full" = "yes" ] ; then
			[ $month -eq 2  ] && observance="Sangha day"
			[ $month -eq 5  ] && observance="Buddha day"
			[ $month -eq 7  ] && observance="Dhamma day (Vassa begins tomorrow)"
			[ $month -eq 10 ] && observance="Pavarana (Vassa ends)"
			[ $month -eq 11 ] && observance="Anapanasati day"
		fi
		[ $month -eq 7 -a $day -eq $vsday ]	&& observance="Vassa"
		[ "$observance" != "" ]  && dhol+=$(echo "$observance|")
	fi
fi

# Fixed non-lunar holidays
if [ $hol ]; then
	[ $DDATE ] && [ "$dischol" ] && dhol+=$(echo "$bold$dischol$bold|")
	[ $ARC ] && [ $month -eq 3 -a $day -eq 21 ] && dhol+=$(echo "R+C New Year Feast|")
	[ $ARC ] && [ $month -eq 9 -a $day -eq 23 ] && dhol+=$(echo "R+C Outdoor Fete|")

	if [ $COMMON ]; then
		[ $day -eq $ides ] && dhol+=$(echo "Ides of ${MONTHL[10#$month]}|")

		[ $month -eq 4 -a $day -eq 1 -a $hour -lt 12 ] && dhol+=$(echo "April Fools' Day|")
		[ $month -eq 5 -a $day -eq 25 ]  && dhol+=$(echo "Towel Day|")
		[ $month -eq 7 -a $day -eq 2 ]	 && dhol+=$(echo "Mid Year's Day|")
		[ $month -eq 7 -a $day -eq 5 ]	 && dhol+=$(echo "X-Day|")
		[ $month -eq 12 -a $day -eq 31 ] && dhol+=$(echo "Hogmanay|")
	fi
fi

# Display results
[ "$dhol" ] && echo "- - -" && echo -en "$dhol" | sed 's/|/\n/g' | sed "s/^/$italics/;s/$/$italics/"

# Diagnostics
if [ $VERBOSE ]; then
	echo "Upcoming Moon Phases:"
	echo
	dmoo+=$(printf "$nnmoon  New Moon      ($nnmont)|")
	dmoo+=$(printf "$nqmoon  First Quarter ($nqmont)|")
	dmoo+=$(printf "$nfmoon  Fullmoon      ($nfmont)|")
	dmoo+=$(printf "$nlmoon  Last Quarter  ($nlmont)|")
	echo -en "$dmoo" | sed 's/|/\n/g' | sort
	echo
	echo "Lunar Holidays & Observances:"
	echo
	dobs+=$(printf "%s  Passover, Pilgrimage, Remembers the Exodus from Egypt (at sunset)|" $passover)
	dobs+=$(printf "%s  Shavu'ot, Pilgrimage, Remembers the giving of the Torah (at sunset)|" $shavuot)
	dobs+=$(printf "%s  Tisha B'Av, Day of Mourning (at sunset)|" $tishabav)
	dobs+=$(printf "%s  Rosh Hashanah, New Year (at sunset)|" $hashanah)
	dobs+=$(printf "%s  Yom Kippur, Day of Atonment (at sunset)|" $yomkippur)
	dobs+=$(printf "%s  Sukkot, Pilgrimage, Remembers the wandering in the desert (at sunset)|" $sukkot)
	dobs+=$(printf "%s  Hanukkah, Festival of Lights, Remembers the rededication of the Temple (at sunset)|" $hanukkah)

	dobs+=$(printf "%s  Carnival, Final celebration before the fasting and austerity of Lent|" $carnival)
	dobs+=$(printf "%s  Lent, 40-day period of penitential preparation|" $lent)
	dobs+=$(printf "%s  Pascha, The Resurrection|" $easter)
	dobs+=$(printf "%s  Pentecost, Descent of the Holy Spirit on the disciples|" $pentecost)
	dobs+=$(printf "%s  Advent, First season of the church year|" $advent)

	dobs+=$(printf "$cny  Chinese NY, New Year's celebration|")
	dobs+=$(printf "$year-07-%02d  Vassa, Buddhist monastic retreat|" $vsday)
	echo -en "$dobs" | sed 's/|/\n/g' | sort
fi
