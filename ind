#!/bin/bash
# Calculates Byzantine date & Indiction
# 2013-07-16/pjh

# See ChangeLog for changes.

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required." && exit 1

FULLCE=
PARTCE=
COMMON=true
LY=
DDATE=
HHPC=
HEBREW=

BYZANTINE=
ROME=
ARC=
CHINALY=
BUDDHIST=
JULIANPRD=
JAPANIY=
MASORETIC=

hol=true

byzconvert=5508 # Byzantine year, September 1st (Julian calendar); 5509 BCE
romconvert=752  # Founding of Rome, January 1st (Julian calendar); 753 BCE
arcconvert=1352 # A.R.C., March 21th, 1:06 a.m. ET; 1353 BCE
chiconvert=2697	# Chinese Lunar year, 21 January to 20 February; 2698 BCE
rocconvert=1911 # ROC year; 1912 CE

budconvert=543	# Buddhist Era or Thai Solar year; 543 BCE
jupconvert=4713	# Julian Period; 4713 BCE
jiyconvert=660	# Japanese Imperial year; 660 BCE
masconvert=4000	# Masoretic Text; 4000 BCE

ZODIAC=(Rat Ox Tiger Rabbit Dragon Snake Horse Goat Monkey Rooster Dog Pig)
CNYDATE=(02-05 01-25 02-12 02-01 01-22 02-10 01-29 02-17 02-06 01-26 02-13 02-03 01-23 02-11 01-31 02-19 02-08 01-28 02-15 02-04)

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")

MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
MONTHL=(- January February March April May June July August September October November December)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1" +%Y)
	month=$(date -d "$1" +%0m)
	day=$(date -d "$1" +%0d)
}
ordinal() {
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac
}
is_leap_year() { ## USAGE: is_leap_year [year]
	ily_year=${1:-$(date +%Y)}
	case $ily_year in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _LEAP_YEAR=1
		return 0 ;;
		*) unset _LEAP_YEAR
		return 1 ;;
	esac
}
displayall() {
	unset PARTCE; unset FULLCE; COMMON=true;
	HHPC=true; DDATE=true; MASORETIC=true;
	HEBREW=true; ROME=true; JULIANPRD=true;
	BYZANTINE=true; ARC=true; JAPANIY=true;
	CHINALY=true; BUDDHIST=true;
}
displaynone() {
	unset PARTCE; unset FULLCE; unset COMMON; unset LY;
	unset HHPC; unset DDATE; unset MASORETIC;
	unset HEBREW; unset ROME; unset JULIANPRD;
	unset BYZANTINE; unset ARC; unset JAPANIY;
	unset CHINALY; unset BUDDHIST; 

	unset LUNAR; unset LCOMMON; unset CHINESE; unset CMONTH;
	unset VERBOSE;
}

setdate today # set today's date

while getopts ":anfpcotejMrzuxiqby:m:d:hHvlLCNDU?" OPTION
do
	case $OPTION in
		a) 	displayall;;													# display all
		n)	displaynone;;													# display none
		f)	[ $FULLCE ]		&& unset FULLCE		|| FULLCE=true;;			# full date
		p)	[ $PARTCE ]		&& unset PARTCE		|| PARTCE=true;;			# part date
		c)	[ $COMMON ] 	&& unset COMMON 	|| COMMON=true;;			# common year
		o)	[ $LY ]			&& unset LY			|| LY=true;;				# leap year
		t)	[ $HHPC ]		&& unset HHPC		|| HHPC=true;;				# Hanke-Henry
		e)	[ $DDATE ]		&& unset DDATE		|| DDATE=true;;				# Discordian
		j)	[ $HEBREW ] 	&& unset HEBREW 	|| HEBREW=true;;			# Hebrew
		M)	[ $MASORETIC ]	&& unset MASORETIC	|| MASORETIC=true;;			# Masoretic
		r)	[ $ROME ] 		&& unset ROME 		|| ROME=true;;				# Roman
		z)	[ $BYZANTINE ] 	&& unset BYZANTINE 	|| BYZANTINE=true;;			# Byzantine
		u)	[ $JULIANPRD ]	&& unset JULIANPRD	|| JULIANPRD=true;;			# Julian period
		x)	[ $ARC ]		&& unset ARC		|| ARC=true;;				# A.R.C.
		i)	[ $JAPANIY ] 	&& unset JAPANIY	|| JAPANIY=true;;			# Japanese Imperial
		q)	[ $CHINALY ]	&& unset CHINALY	|| CHINALY=true;;			# Chinese Lunar
		b)	[ $BUDDHIST ] 	&& unset BUDDHIST 	|| BUDDHIST=true;;			# Buddhist

		y)	year=$OPTARG;;													# set year
		m)	month=$OPTARG;;													# set month
		d)	day=$OPTARG														# set day
			[ "$(egrep [[:alpha:][:blank:]-] <<< $day)" != "" ] && setdate "$day"
			;;
		h)	unset hol;;														# disable holidays
		H)	bold="**" ; italics="_";;										# highlight
 		v)	[ $VERBOSE ]	&& unset VERBOSE	|| VERBOSE=true;;			# verbose

		l)	[ $LUNAR ]		&& unset LUNAR		|| displaynone;LUNAR=true;;	# lunar diagnostic data
		L)	[ $LCOMMON ]	&& unset LCOMMON	|| LCOMMON=true;;			# lunar common data
		C)	[ $CHINESE ]	&& unset CHINESE	|| CHINESE=true;;			# Chinese diagnostic data
		N)	[ $CHMONTH ]	&& unset CHMONTH	|| CHMONTH=true;;			# Chinese calendar

		D)	while IFS= read -r line; do										# check dependencies
				[ $(which $line) ] || echo "Install '$line'"; done \
			< <(grep "DEP" $0 | sed -e "/grep DEP/d;s/^.*DEP[: ]*//")
			exit;;
		U)	cp -uv $HOME/bin/ind $HOME/src/ind/								# update git repository
			cp -uv $HOME/bin/getusage $HOME/src/ind/
			cp -uv $HOME/bin/rnum $HOME/src/ind/
			cp -uv $HOME/share/man/man1/ind.1 $HOME/src/ind/
			cp -uv $HOME/share/man/man7/uposatha.7 $HOME/src/ind/
			exit;;
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initialize
is_leap_year $year
[ $year -le 0 ] && echo "$(basename $0): Date must be positive." && exit 1
[ $month -lt 1 -o $month -gt 12 ] && echo "$(basename $0): Month not within range." && exit 1
[ ! $_LEAP_YEAR ] && [ $month -eq 2 -a $day -gt 28 ] && echo "$(basename $0): Day not within range." && exit 1
[   $_LEAP_YEAR ] && [ $month -eq 2 -a $day -gt 29 ] && echo "$(basename $0): Day not within range." && exit 1

month=$(printf "%02d" $((10#$month)))
day=$(printf "%02d" $((10#$day)))
ymd=$year-$month-$day
hms=$(date +%H:%M:%S)
dow=$(date -d $ymd +%w)

doy=$(date -d $ymd +%-j) 	# day of year
iwn=$(date -d $ymd +%-V) 	# ISO week no
tz=$(date -d $ymd +%Z)		# time zone
utc=$(date -ud "$ymd $hms $tz" "+%F %H:%M:%S")

# Julian calendar has 13 day delta for 20th/21st centuries
jymd=$(date -d "$ymd - 13 days" +%F)
jdoy=$(date -d "$jymd" +%-j)
[ $month -eq 1 -a $day -le 13 ] && jdoy=0

# Set Modified Julian Date, Truncated Julian Date & Rata Die (UTC); DEP jday
if [ $(which jday) ] ; then
	mjd=$(echo "$(jday -d $utc)-2400000.5" | bc)
	tjd=$(echo "$(jday -d $utc)-2440000.5" | bc | cut -f1 -d".")
	ratadie=$(echo "$(jday -d $utc)-1721424.5" | bc | cut -f1 -d".")
else 
	unset mjd
	unset ratadie
fi

# Set Hanke-Henry date; DEP hh
if [ $(which hh) ] && [ $year -ge 2018 ]; then
	hhdate=$(hh -W -d$day -m$month -y$year)
else unset HHPC; fi

# Set Discordian date; DEP ddate
if [ $(which ddate) ]; then
	discord=$(ddate +'%{%e %B%} %Y' $day $month $year | sed 's/The //')
	dischol=$(ddate +'%N%H' $day $month $year)
else unset DDATE; fi

# Set Roman numeral year; DEP rnum
if [ $(which rnum) ]; then
	rnyear=$(rnum $year)
else rnyear="/"; fi

# Hebrew calendar; DEP hebcal
if [ $(which hebcal) ]; then
	hebdate=$(hebcal -Th $month $day $year | sed -n 1p)
	hebrhol=$(hebcal -Tx $month $day $year | sed 1d)
else unset HEBREW; fi

# Lent and other Easter-based holidays; ncal
easter=$(date -d "$(ncal -e $year)" +%F)
oeaster=$(date -d "$(ncal -o $year)" +%F)
carnival=$(date -d "$easter - 47 days" +%F)
lent=$(date -d "$easter - 46 days" +%F)

# Advent
xmasdow=$(date -d "$year-12-25" +%w)
xmaswks=3
[ $xmasdow -eq 0 ] && (( xmaswks+=1 ))
(( xmasadj= -1 * ((xmaswks * 7) + xmasdow) ))
advent=$(date -d "$year-12-25 $xmasadj days" +%F)

# Lunar and Lunisolar Calculations
(( golden=year%19+1 ))
(( dominical=((year-1)%100%4*2+(year-1)%100%7*4+(year-1)/100%4*2)%7 ))

if [ $_LEAP_YEAR ]; then
	leap=" (L)"
	if [ $dominical -eq 0 ]; then dom="${DOMINI[$dominical]}${DOMINI[6]}"
	else dom="${DOMINI[$dominical]}${DOMINI[$dominical-1]}"; fi
else
	dom="${DOMINI[$dominical]}"
fi
[ ! $LY ] && unset leap

# Moons; DEP phases
if [ $(which phases) ]; then
	for i in {1..12}; do
		while IFS= read -r line; do
		    newmoon+=( "$(date -d "$line UTC" +%F)" )
		    chinesemoon+=( "$(TZ=Asia/Shanghai date -d "$line UTC" +%F)" )
		done < <( phases $year $i 0 )

		while IFS= read -r line; do
		    fullmoon+=( "$(date -d "$line UTC" +%F)" )
		done < <( phases $year $i 1 )
	done
	for i in "${newmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $moonset ] && bkmoon=$i
		[ "${i:5:2}" = "$month" ] && [ ! $moonset ] && moonphase[0]=$i && moonset=yes
		[ "$i" = "$ymd" ] && moon=${PHASES[0]}
		[ "$bkmoon" = "$ymd" ] && moon="Black Moon"
	done
	unset moonset
	for i in "${fullmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $moonset ] && blmoon=$i
		[ "${i:5:2}" = "$month" ] && [ ! $moonset ] && moonphase[2]=$i && moonset=yes
		[ "$i" = "$ymd" ] && moon=${PHASES[2]} && full=yes
		[ "$blmoon" = "$ymd" ] && moon="Blue Moon" && unset full
	done
	[ ! $moonset ] && moonset=yes # February is shorter than a standard lunation
	[ $full ] && [ $month -eq 9 ] && moon="Harvest Moon"

	# Vassa
	vsday=$(date -d "$(phases $year 7 1 | sed -n 1p) + 1 day" +%d)

	# Chinese calendar
	cstep=1; for i in "${chinesemoon[@]}"; do
		if [ $cstep -eq 1 ]; then
			[ "${i:5:2}" == "01" -a "${i:8:2}" -ge 21 ] && lunarmonth[$cstep]=$i && ((cstep++))
			[ "${i:5:2}" == "02" ] && lunarmonth[$cstep]=$i && ((cstep++))
		else
			lunarmonth[$cstep]=$i
			((cstep++))
		fi
	done
	[ $year -eq 2027 ] && lunarmonth[1]=$(date -d "${lunarmonth[1]} - 1 day" +%F)

	# Chinese Lunar Year
	cny=${lunarmonth[1]}	
	(( cly=year+chiconvert ))
	[[ 10#$doy -ge 10#$(date -d "$cny" +%j) ]] && (( cly+=1 ))
	(( roc=year-rocconvert ))

	# Chinese festivals

	# A leap month is inserted if there are 13 New Moons from the start of the 11th
	# month in the first year to the start of the 11th month in the following.

	lm=0; thnm=(2020 2023 2025 2028)
	for i in "${thnm[@]}"; do
		[ $year -eq $i ] && lm=1
	done

	qingming="$year-04-05"
	mdautumn=$(date -d "${lunarmonth[8+$lm]} + 14 days" +%F)

	# 'year of'
	case 1 in
		$(($year< 2020))) (( yearof=$year-2008 )) ;;
		$(($year< 2032))) (( yearof=$year-2020 )) ;;
		$(($year< 2044))) (( yearof=$year-2032 )) ;;
	esac
else
	unset moonset
	unset CHINALY
	unset CHINESE
fi

# Simple year calculations
(( buddhist=year+budconvert ))
(( julp=year+jupconvert ))
(( jiy=year+jiyconvert ))
(( masor=year+masconvert ))

# Byzantine & Roman calendars are aligned to Julian calendar
(( byzantine=year+byzconvert ))
[[ 10#$jdoy -ge 10#$(date -d "1 Sept $year" +%j) ]] && (( byzantine+=1 ))

(( rome=year+romconvert ))
[[ 10#$jdoy -ge 10#$(date -d "1 Jan  $year" +%j) ]] && (( rome+=1 ))

# ARC
(( arc=year+arcconvert ))
[[ 10#$doy -ge 10#$(date -d "21 March $year" +%j) ]] && (( arc+=1 ))

# Beware the Ides...
[ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 10 ] && ides=15 || ides=13

# Indictions and ordinals
(( ind=($year+2)%15+1 ))	# set Gregorian indiction
ordinal $ind; gord=$ord 	# set Gregorian ordinal

(( byzind=$byzantine%15 ))	# set Byzantine indiction
[ $byzind -eq "0" ] && byzind=15
ordinal $byzind; bord=$ord	# set Byzantine ordinal

ordinal $(( 10#$day )) 		# set standard ordinal

# main()
[ $FULLCE ]		&& printf "$bold%s %d %s %d$bold\n" ${DOWL[$dow]} $(( 10#$day )) ${MONTHL[10#$month]} $year
[ $PARTCE ]		&& printf "$bold%s %d%s %s$bold\n" ${DOWL[$dow]} $(( 10#$day )) $ord ${MONTHL[10#$month]}

[ $COMMON ]		&& printf "$bold" && printf "CE %d %s %2d%s Ind." $year $rnyear $ind $gord && echo "$leap$bold"
[ $COMMON ]		&& printf "Day %3d / Week %2d %3s\n" $doy $iwn $tz
[ $COMMON ] && [ $mjd ] && printf "MJD %s %s UTC\n" ${mjd:0:7} "${utc:5:5}" | sed 's/-/\//'
[ $COMMON ] && [ $tjd ] && printf "TJD %5s    mid. UTC\n" $tjd
[ $COMMON ] && [ $ratadie ] && printf "RD %s    mid. UTC\n" $ratadie

[ $HHPC ]		&& printf "%-17s H-H %4d\n" "${hhdate::${#hhdate}-5}" ${hhdate:(-4)}
[ $DDATE ]		&& printf "%-16s YOLD %d\n" "${discord::${#discord}-5}" ${discord:(-4)}
[ $HEBREW ]		&& printf "%-18s AM %d\n" "${hebdate::${#hebdate}-6}" ${hebdate:(-4)}

[ $MASORETIC ]	&& printf "Masoretic          AL %d\n" $masor
[ $ROME ]		&& printf "City of Rome       au %d\n" $rome
[ $BYZANTINE ]	&& printf "Byzantine (%2d%s)   AM %d\n" $byzind $bord $byzantine
[ $JULIANPRD ]	&& printf "Julian Period         %d\n" $julp
[ $ARC ]		&& printf "A.R.C.                %d\n" $arc
[ $JAPANIY ]	&& printf "Japanese Imperial     %d\n" $jiy
[ $CHINALY ]	&& printf "Chinese Lunar   (%3d) %d\n" $roc $cly
[ $BUDDHIST ]	&& printf "Buddhist Era          %d\n" $buddhist

if [ $VERBOSE ]; then
	[ $cny ] 	&& printf "Chinese New Year %s" $year
	if [ $CHINESE ]; then
		printf " %s %s\n" ${cny:5:5} ${CNYDATE[(($year-2019))]}
	else
		[ $cny ] && printf " %s\n" ${cny:5:5} | sed 's/-/\//'

		[ "$moon" ] && printf "Moon                  %s\n" "$moon" | sed 's/ Moon//'
		printf "Julian calendar       %s\n" ${jymd:5:5} | sed 's/-/\//'
		printf "Julian day of year    %03d\n" $jdoy
		printf "Dominical letter      %s\n" $dom
		printf "Epact                 %s\n" ${EPACTS[$golden]}
		printf "Golden number         %s\n" $golden
		printf "Ides                  %d\n" $ides
	fi
fi

# Lunar and Hebrew observances and holidays
if [ $hol ]; then
	if [ $COMMON ]; then	
		[ "$ymd" = "$carnival"	] && dhol+=$(echo "Carnival|")
		[ "$ymd" = "$lent"		] && dhol+=$(echo "Lent|")
		[ "$ymd" = "$easter"	] && dhol+=$(echo "Pascha (Lent ends)|")
		[ "$ymd" = "$oeaster"	] && dhol+=$(echo "Orthodox Pascha|")
		[ "$ymd" = "$advent"	] && dhol+=$(echo "Advent begins|")
	fi
	if [ $CHINALY ]; then
		[ "$ymd" = "$cny" 		] && dhol+=$(echo "Spring Festival (Year of the ${ZODIAC[10#$yearof]})|")
		[ "$ymd" = "$qingming"	] && dhol+=$(echo "Tomb Sweeping Festival|")
		[ "$ymd" = "$mdautumn"	] && dhol+=$(echo "Mid-Autumn Moon Festival|")
	fi

	[ $HEBREW ] && [ "$hebrhol" ] && dhol+=$(echo "$hebrhol|")

	if [ $BUDDHIST ]; then
		[ "$moon" != "" ] && observance="$moon Uposatha"
		
		# only the first full moon
		if [ $full ] ; then
			[ $month -eq 2  ] && observance="Sangha day"
			[ $month -eq 5  ] && observance="Buddha day"
			[ $month -eq 7  ] && observance="Dhamma day (Vassa begins tomorrow)"
			[ $month -eq 10 ] && observance="Pavarana (Vassa ends)"
			[ $month -eq 11 ] && observance="Anapanasati day"
		fi
		[ $vsday ] && [ $month -eq 7 -a $day -eq $vsday ] && observance="Vassa"
		[ "$observance" != "" ] && dhol+=$(echo "$observance|")
	fi

	# Fixed non-lunar holidays
	[ $DDATE ] && [ "$dischol" ] && dhol+=$(echo "$bold$dischol$bold|")
	[ $ARC ] && [ $month -eq 3 -a $day -eq 21 ] && dhol+=$(echo "R+C New Year Feast|")
	[ $ARC ] && [ $month -eq 9 -a $day -eq 23 ] && dhol+=$(echo "R+C Outdoor Fete|")

	if [ $COMMON ]; then
		[ $day -eq $ides ] && dhol+=$(echo "Ides of ${MONTHL[10#$month]}|")

		[ $month -eq 1 -a $day -eq 1 ]	 && dhol+=$(echo "Hogmanay|")
		[ $month -eq 1 -a $day -eq 2 ]	 && dhol+=$(echo "Hogmanay|")
		[ $month -eq 2 -a $day -eq 2 ]   && dhol+=$(echo "Groundhog Day|")
		[ $month -eq 3 -a $day -eq 14 ]	 && dhol+=$(echo "Pi Day|")
		[ $month -eq 3 -a $day -eq 25 ]	 && dhol+=$(echo "Lady Day|")
		[ $month -eq 4 -a $day -eq 1 -a ${hms:0:2} -lt 12 ] && dhol+=$(echo "April Fools' Day|")
		[ $month -eq 5 -a $day -eq 1 ]   && dhol+=$(echo "May Day|")
		[ $month -eq 5 -a $day -eq 15 ]  && dhol+=$(echo "Whitsun|")
		[ $month -eq 5 -a $day -eq 25 ]  && dhol+=$(echo "Towel Day|")
		[ $month -eq 6 -a $day -eq 24 ]  && dhol+=$(echo "Midsummer Day|")
		[ $month -eq 6 -a $day -eq 28 ]  && dhol+=$(echo "Tau Day|")
		[ $month -eq 7 -a $day -eq 2 ]	 && dhol+=$(echo "Mid Year's Day|")
		[ $month -eq 7 -a $day -eq 5 ]	 && dhol+=$(echo "X-Day|")
		[ $month -eq 8 -a $day -eq 1 ]	 && dhol+=$(echo "Lammas|")
		[ $month -eq 9 -a $day -eq 29 ]	 && dhol+=$(echo "Michaelmas|")
		[ $month -eq 11 -a $day -eq 1 ]	 && dhol+=$(echo "All Saints' Day|")
		[ $month -eq 11 -a $day -eq 11 ] && dhol+=$(echo "Martlemass|")
		[ $month -eq 12 -a $day -eq 31 ] && dhol+=$(echo "Hogmanay|")
	fi
fi

# Display results
[ $hol ] && [ "$dhol" ] && echo "- - -" && echo -en "$dhol" | sed 's/|/\n/g' | sed "s/^/$italics/;s/$/$italics/"

# Lunar diagnostic data
if [ $LUNAR ]; then
	[ $VERBOSE ] && echo

	if [ $moonset ]; then
		echo "Moon phases for ${MONTHL[10#$month]} $year:"
#		for i in 0 2; do
		[ ${moonphase[0]} ] && dmoo+=$(printf "%s  %s|" ${moonphase[0]} "${PHASES[0]}")
		[ ${moonphase[2]} ] && dmoo+=$(printf "%s  %s|" ${moonphase[2]} "${PHASES[2]}")
#		done
		[ "$bkmoon" ] && dmoo+=$(printf "%s  Black Moon|" $bkmoon)
		[ "$blmoon" ] && dmoo+=$(printf "%s  Blue Moon |" $blmoon)

		echo -en "$dmoo" | sed 's/|/\n/g' | sort

#		IFS="|" dmoo=($dmoo)
#		dmoos=($(sort <<<"${dmoo[*]}"))
#		for i in ${dmoos[@]}; do
#			echo "$i"
#		done
	fi	
	if [ $LCOMMON ]; then
		dobs+=$(printf "%s  Lent, 40-day period of penitential preparation|" $lent)
		dobs+=$(printf "%s  Pascha, central liturgical feast (Lent ends)|" $easter)
		dobs+=$(printf "%s  Orthodox Pascha, liturgical feast in the East|" $oeaster)
		dobs+=$(printf "%s  Advent, First season of the church year|" $advent)

		dobs+=$(printf "$year-07-%02d  Vassa, Buddhist monastic retreat|" $vsday)
	fi
	if [ $CHINESE ]; then
		dobs+=$(printf "%s  Spring Festival (Year of the %s)|" $cny ${ZODIAC[10#$yearof]})
		dobs+=$(printf "%s  Qingming Festival, tomb sweeping|" $qingming)
		dobs+=$(printf "%s  Mid-Autumn Festival, moon feast|" $mdautumn)
	fi
	if [ "$dobs" ]; then
		[ "$dmoo" ] && echo
		echo "Lunar Holidays & Observances:"
		echo -en "$dobs" | sed 's/|/\n/g' | sort
	fi
	if [ $CHMONTH ]; then
		echo
		echo "Chinese Months:"
		for i in {1..6}; do 
			printf "%2d ${lunarmonth[$i]}  |  %2d ${lunarmonth[$i+6]}\n" $i $(($i+6))
		done
	fi
fi
