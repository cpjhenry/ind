#!/bin/bash
# Calculates Byzantine date & Indiction
# 2013-07-16/pjh

# See ChangeLog for changes.

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required."	&& exit 1
[ $(uname) = 'Darwin' ] && [ ! $(which gsed)  ] && echo "$(basename $0): 'GNU sed' is required."	&& exit 1

GITREP=$HOME/src/ind
HOLTMP=/tmp/ind_holidays
export GCAL="--resource-file=gcal --exclude-fixed-dates-list-title --suppress-fixed-dates-list-separator"

FULLCE=
COMMON=true

HHPC=
ERISIAN=
KLOCK=

HEBREW=
HIJRI=
BAHAI=

ROME=
BYZANTINE=
JULIANP=

MASORETIC=

JAPANIY=
CHINALY=
BUDDHIST=

HOLDISP=

romconvert=752  # Founding of Rome, January 1st (Julian calendar); 753 BCE
byzconvert=5508 # Byzantine year, September 1st (Julian calendar); 5509 BCE
jupconvert=4713	# Julian Period; 4713 BCE

masconvert=4000	# Masoretic; 4000 BCE
uglconvert=1717 # UGL year; 1717 CE
glcconvert=1855 # GLC year; 1855 CE
arcconvert=1352 # Anno R.C., March 21th, 1:06 a.m. ET; 1353 BCE
yodconvert=530	# Anno Inventionis; 530 BCE
mktconvert=1118 # Anno Ordinis; 1118 CE

jiyconvert=660	# Japanese Imperial year; 660 BCE
chiconvert=2697	# Chinese Lunar year, 21 January to 20 February; 2698 BCE
rocconvert=1911 # ROC year; 1912 CE

frcconvert=1792 # French Revolutionary Calendar; 1792 CE
hebconvert=3760 # Hebrew Calendar; 3761 BCE
bahconvert=1844 # Baháʼí Calendar; 1844 CE

budconvert=543	# Buddhist Era or Thai Solar year; 543 BCE

MONTHL=(- January February March April May June July August September October November December)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)
MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")
SYMBOL=("●" "☽" "○" "☾")
ALTSYM=("x" ">" "o" "<")
LYSYM="※"; LYALT="X"
BUDOBS=("Magha (Sangha)" "Visakha (Buddha)" "Asalha (Dhamma)" "Pavarana")

ZODIAC=(Rat Ox Tiger Rabbit Dragon Snake Horse Goat Monkey Rooster Dog Pig)
CNYDATE=(02-05 01-25 02-12 02-01 01-22 02-10 01-29 02-17 02-06 01-26 02-13 02-03 01-23 02-11 01-31 02-19 02-08 01-28 02-15 02-04)
ERANAME=(- "Meiji ㍾" "Taishō ㍽" "Shōwa ㍼" "Heisei ㍻" "Reiwa ㋿")

REGNAME=(- "Geo 3"	"Geo 4" "Wm 4"	"Vict"	"Edw 7"	"Geo 5"	"Edw 8"	"Geo 6" "Eliz 2" "Cha 3")
REGDATE=(- "10/25"	"01/29"	"06/26" "06/20" "01/22"	"05/06"	"01/20"	"12/11"	"02/06" "09/08")
REGYEAR=(- "1760"	"1820"	"1830"	"1837"	"1901"	"1910"	"1936"	"1936"	"1952"	"2022")

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1 00:18" +%Y 2>/dev/null); [ $? -ne 0 ] && NWR
	month=$(date -d "$1 00:18" +%0m)
	day=$(date -d "$1 00:18" +%0d)
	}
ordinal() {
	local ord
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac; echo $ord
	}
is_leap_year() { ## USAGE: is_leap_year [year]
	case ${1:-$(date +%Y)} in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _LY=1;;
		*) unset _LY;;
	esac
	}
NWR() { # Not within range
	echo "$(basename $0): Y-M-D not within range."
	exit 1
	}
displayall() {
	COMMON=true;
	HHPC=true; ERISIAN=true;
	HEBREW=true; BAHAI=true;
	ROME=true; BYZANTINE=true;
	JULIANP=true; MASORETIC=true;
	JAPANIY=true; CHINALY=true;
	BUDDHIST=true; HIJRI=true;
	}
displaynone() {
	unset FULLCE;
	unset COMMON;
	unset HHPC; unset ERISIAN; unset KLOCK;
	unset HEBREW; unset BAHAI;
	unset ROME; unset BYZANTINE;
	unset JULIANP; unset MASORETIC;
	unset JAPANIY; unset CHINALY;
	unset BUDDHIST; unset HIJRI;

	unset VERBOSE; unset LUNAR; unset CHINESE;
	}
testall() {
	unset t_var
	[ $FULLCE ]		|| [ $COMMON ]	|| [ $HHPC ]		|| [ $ERISIAN ]	||
	[ $HEBREW ]		|| [ $ROME ]	|| [ $BYZANTINE ]	|| [ $JULIANP ]	||
	[ $MASORETIC ]	|| [ $JAPANIY ]	|| [ $CHINALY ]		|| [ $BUDDHIST ] && t_var=true
	}

setdate today			# set today's date

while getopts ":anfcpekjrzuxiqby:m:d:hFHMvClBVoODU?" OPTION
do case $OPTION in
		a) 	displayall;;													# display all
		n)	displaynone;;													# display none

		f)	[ $FULLCE ]		&& unset FULLCE		|| FULLCE=true;;			# date
		c)	[ $COMMON ] 	&& unset COMMON 	|| COMMON=true;;			# common year

		p)	[ $HHPC ]		&& unset HHPC		|| HHPC=true;;				# Hanke-Henry
		e)	[ $ERISIAN ]	&& unset ERISIAN	|| ERISIAN=true;;			# Erisian
		k)	[ $KLOCK ]		&& unset KLOCK		|| KLOCK=true;;				# Klock

		j)	[ $HEBREW ] 	&& unset HEBREW 	|| HEBREW=true;;			# Hebrew

		r)	[ $ROME ] 		&& unset ROME 		|| ROME=true;;				# Roman
		z)	[ $BYZANTINE ] 	&& unset BYZANTINE 	|| BYZANTINE=true;;			# Byzantine
		u)	[ $JULIANP ]	&& unset JULIANP	|| JULIANP=true;;			# Julian period

		x)	[ $MASORETIC ]	&& unset MASORETIC	|| MASORETIC=true;;			# Masoretic

		i)	[ $JAPANIY ] 	&& unset JAPANIY	|| JAPANIY=true;;			# Japanese Imperial
		q)	[ $CHINALY ]	&& unset CHINALY	|| CHINALY=true;;			# Chinese lunar
		b)	[ $BUDDHIST ] 	&& unset BUDDHIST 	|| BUDDHIST=true;;			# Buddhist

		y)	year=$OPTARG;;													# set year
		m)	month=$OPTARG;;													# set month
		d)	day=$OPTARG														# set day
			[ "$(grep -E "[[:alpha:][:blank:]-]" <<< $day)" ] && setdate "$day";;

		h)	[ $HOLDISP ]	&& unset HOLDISP	|| HOLDISP=true;;			# holiday display
		F)	[ $HOLCACHE ]	&& unset HOLCACHE	|| HOLCACHE=true;;			#- holiday cache
		H)	bold="**"; italics="_";;										# highlight
		M)	SYMBOL=("${ALTSYM[@]}"); LYSYM=("$LYALT");;						# alternate symbols

 		v)	[ $VERBOSE ]	&& unset VERBOSE	|| displaynone;VERBOSE=true;; # verbose
		C)	[ $CHINESE ]	&& unset CHINESE	|| CHINESE=true;;			#- Chinese NY diagnostics
		l)	[ $LUNAR ]		&& unset LUNAR		|| displaynone;LUNAR=true;;	#- lunar diagnostic data
		B)	for m in 2 5 7; do												# Buddhist observances
				ind -y$year -m$m -d1 -l |sed -n "/Full/s/Full Moon/${BUDOBS[$j]}/p";((j++)); done
				ind -y$year -V
				ind -y$year -m10 -d1 -l |sed -n "/Full/s/Full Moon/${BUDOBS[$j]}/p";exit;;
		V)	[ $VASSA ]		&& unset VASSA		|| VASSA=true;;				#- display Vassa date
		o)	for d in {01..31}; do											#- Observance diagnostics
				ind -ch -y$year -m$month -d$d |
				sed "/^ind:/d;s/^/$month\/$d\t/;s/^0//;s/- //"
			done;exit;;
		O)	for m in {01..12}; do
				ind -y$year -m$m -o
			done;exit;;
		D)	while IFS= read -r line; do										# check dependencies
				[ $(which $line) ] || echo "Install '$line'"
			done < <(grep "DEP" $0 |sed -e "/grep DEP/d;s/^.*DEP[: ]*//")
			exit;;
		U)	cp -uv $HOME/bin/$(basename $0) $GITREP/						#- update git repository
			cp -uv $HOME/share/man/man1/$(basename $0).1 $GITREP/
			cp -uv $HOME/share/man/man7/uposatha.7 $GITREP/

			cp -uv $HOME/bin/getusage $GITREP/
			cp -uv $HOME/bin/mob $GITREP/
			cp -uv $HOME/bin/rnum $GITREP/
			exit;;
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initialize
is_leap_year $year
[ $year -le 0 ] && NWR
[ $month -lt 1 -o $month -gt 12 ] && NWR
[ $day -lt 1 -o $day -gt 31 ] && NWR
[ $day -gt 30 ] && [ $month -eq 9 -o $month -eq 4 -o $month -eq 6 -o $month -eq 11 ] && NWR
[   $_LY ] && [ $month -eq 2 -a $day -gt 29 ] && NWR
[ ! $_LY ] && [ $month -eq 2 -a $day -gt 28 ] && NWR

if [ $year -lt 1583 ]; then ybg=true
	if [ $year -eq 1582 ]; then
		[ $month -eq 10 ] && [ $day -ge 15 ] && unset ybg
		[ $month -gt 10 ] && unset ybg; fi
	if [ $ybg ]; then
		echo "$(basename $0): Proleptic dates prior to the start of the Gregorian calendar are disabled."
		exit; fi; fi

month=$(printf "%02d" $((10#$month)))
day=$(printf "%02d" $((10#$day)))
ymd="$year-$month-$day"
hms=$(date +%T)

ltz=$(date -d "$ymd 00:18" +%Z)		# timezone
dow=$(date -d "$ymd 00:18" +%w) 	# day of week
doy=$(date -d "$ymd 00:18" +%-j)	# day of year
iwn=$(date -d "$ymd 00:18" +%-V)	# ISO week no

if [ "$ltz" = "EWT" ]; then			# 9 Feb 1942 to 30 Sep 1945
	utc=$(date -ud "$ymd $hms $(date -d06/01 +%Z)" "+%F %T")
elif [ "$ltz" = "LMT" ]; then		# till 31 Dec 1894
	utc=$(date -ud "$ymd $hms $(date -d01/01 +%Z)" "+%F %T")
else
	utc=$(date -ud "$ymd $hms $ltz" "+%F %T")
fi

# Moons; DEP phases
if [ $(which phases) ]; then
	while IFS= read -r line; do newmoon+=( "$(date -d "$line UTC" +%F)"); done < <(phases $year $month 0)
	while IFS= read -r line; do fullmoon+=("$(date -d "$line UTC" +%F)"); done < <(phases $year $month 2)

	for i in "${newmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $MOONSET ] && BLKMOON=$i
		[ "${i:5:2}" = "$month" ] && [ ! $MOONSET ] && moonphase[0]=$i && MOONSET=true
	done
	[ $MOONSET ] && [ $ymd = ${moonphase[0]} ] && moon=${PHASES[0]} && MTYPE=0
	[ $BLKMOON ] && [ $ymd = $BLKMOON ] && moon="Black Moon" && MTYPE=0
	unset MOONSET

	for i in "${fullmoon[@]}"; do
		[ "${i:5:2}" = "$month" ] && [ $MOONSET ] && BLUMOON=$i
		[ "${i:5:2}" = "$month" ] && [ ! $MOONSET ] && moonphase[2]=$i && MOONSET=true
	done
	[ $MOONSET ] && [ $ymd = ${moonphase[2]} ] && moon=${PHASES[2]} && FULL=true && MTYPE=2
	[ $BLUMOON ] && [ $ymd = $BLUMOON ] && moon="Blue Moon" && MTYPE=2

	if [ $FULL ]; then
		[ $month -eq 2  ] && moon="Snow Moon"
		[ $month -eq 3  ] && moon="Lenten Moon"
		[ $month -eq 4  ] && moon="Paschal Moon"
		[ $month -eq 9  ] && moon="Harvest Moon"
		[ $month -eq 10 ] && moon="Hunter's Moon"
		[ $month -eq 11 ] && moon="Beaver Moon"; fi

	# Vassa
	vsday=$(date -d "$(phases $year 7 2 |sed -n 1p) + 1 day" +%d)

	# Chinese calendar
	for i in {1..2}; do while IFS= read -r line; do
		chinesemoon+=("$(TZ=Asia/Shanghai date -d "$line UTC" +%F)"); done < <(phases $year $i 0)
		done; cstep=1
	for i in "${chinesemoon[@]}"; do
		if [ $cstep -eq 1 ]; then
			[ "${i:5:2}" == "01" -a "${i:8:2}" -ge 21 ] && lunarmonth[$cstep]=$i && ((cstep++))
			[ "${i:5:2}" == "02" ] && lunarmonth[$cstep]=$i && ((cstep++))
		fi; done
	[ $year -eq 2027 ] && lunarmonth[1]=$(date -d "${lunarmonth[1]} - 1 day" +%F)

	# Chinese Lunar Year
	cny=${lunarmonth[1]}	
	(( cly=year+chiconvert ))
	doycmp=$(date -d "$cny" +%-j)
	[[ 10#$doy -ge 10#$doycmp ]] && (( cly+=1 ))
	[[ 10#$doy -eq 10#$doycmp ]] && newchi=" !"
	(( roc=year-rocconvert )); [ $roc -le 0 ] && unset roc

	# 'year of'
	case 1 in
		$(($year< 1969))) unset cny ;;
		$(($year< 1972))) (( yearof=$year-1960 )) ;;
		$(($year< 1984))) (( yearof=$year-1972 )) ;;
		$(($year< 1996))) (( yearof=$year-1984 )) ;;
		$(($year< 2008))) (( yearof=$year-1996 )) ;;
		$(($year< 2020))) (( yearof=$year-2008 )) ;;
		$(($year< 2032))) (( yearof=$year-2020 )) ;;
		$(($year< 2044))) (( yearof=$year-2032 )) ;;
		$(($year>=2044))) unset cny ;;
	esac

	# Diagnostics
	if [ $CHINESE ]; then
		[ $year -le 2038 ] && printf "%s %s %s\n" $year ${cny:5:5} ${CNYDATE[(($year-2019))]}
		exit; fi

	if [ $LUNAR ]; then
		for i in 0 2; do # February is shorter than a standard lunation (e.g. Feb. 2033 & 2037)
			[ ${moonphase[$i]} ] && dmoo+=$(printf "%s*\t%s|" ${moonphase[$i]:5} "${PHASES[$i]}" |sed 's/-/\//')
			done
		[ "$BLKMOON" ] && dmoo+=$(printf "%s  Black Moon|" $BLKMOON)
		[ "$BLUMOON" ] && dmoo+=$(printf "%s  Blue Moon |" $BLUMOON)

		echo -en "$dmoo" |sed 's/|/\n/g' |sort
		exit; fi
	if [ $VASSA ]; then
		[ $vsday ] && printf "07/%s*\tVassa\n" $vsday
		exit; fi
else unset CHINALY; fi

# Lunar and Lunisolar Calculations
if [ $VERBOSE ]; then
	(( dominical=((year-1)%100%4*2+(year-1)%100%7*4+(year-1)/100%4*2)%7 ))
	if [ $_LY ]; then
		if [ $dominical -eq 0 ]; then dominical="${DOMINI[$dominical]}${DOMINI[6]}"
		else dominical="${DOMINI[$dominical]}${DOMINI[$dominical-1]}"; fi
	else dominical="${DOMINI[$dominical]}"; fi
	(( golden=year%19+1 )); fi

# Julian calendar has 13 day delta for 20th/21st centuries
if [ $year -lt 1901 ]
	then jdelta=12; [ $month -gt 2 -a $year -eq 1900 ] && ((jdelta+=1)); else jdelta=13; fi
if [ $year -lt 1801 ]
	then jdelta=11; [ $month -gt 2 -a $year -eq 1800 ] && ((jdelta+=1)); fi
if [ $year -lt 1701 ]
	then jdelta=10; [ $month -gt 2 -a $year -eq 1700 ] && ((jdelta+=1)); fi

jymd=$(date -d "$ymd - $jdelta days 00:18" +%F)
jdoy=$(date -d "$jymd 00:18" +%-j)
jdoycmp=$jdoy; [ $month -eq 1 -a $day -le $jdelta ] && jdoycmp=0

# Roman & Byzantine calendars are aligned to Julian calendar
(( rome=year+romconvert ))
[[ 10#$jdoycmp -ge 1 ]] && (( rome+=1 )) # January 1st (Day 1)
[[ 10#$jdoycmp -eq 1 ]] && newrom=" !"

(( byzantine=year+byzconvert ))
doycmp=$(date -d "1 Sept $year" +%-j)	 # September 1st (Day 1)
[[ 10#$jdoycmp -ge 10#$doycmp ]] && (( byzantine+=1 ))
[[ 10#$jdoycmp -eq 10#$doycmp ]] && newbyz=" !"

# Indictions and ordinals
(( byzind=$byzantine%15 ))	# Byzantine
[ $byzind -eq "0" ] && byzind=15
byzind="$byzind$(ordinal $byzind)"

(( ind=($year+2)%15+1 ))	# Gregorian
ind="$ind$(ordinal $ind)"

# Beware the Ides...
[ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 10 ] && ides=15 || ides=13

# French Revolutionary Calendar
(( frc=year-frcconvert ))
[ $frc -le 0 ] && unset frc

# Set Roman numeral years; DEP rnum
if [ $COMMON ] && [ $(which rnum) ]; then
	rnyear=$(rnum $year)
	[ $frc ] && frc=$(rnum $frc)
else unset rnyear; fi

# Regnal Year (United Kingdom, from 1 Jan 1801)
if [ $COMMON ]; then
	case 1 in
		$(($year>=9999)) ) REGNUM=12;;
		$(($year>=9999)) ) REGNUM=11;;
		$(($year>=2022)) ) REGNUM=10;;
		$(($year>=1952)) ) REGNUM=9;;
		$(($year>=1937)) ) REGNUM=8;;
		$(($year>=1936)) ) [ $month -eq 12 -a $day -ge 11 ] && REGNUM=8 || REGNUM=7;;
		$(($year>=1910)) ) REGNUM=6;;
		$(($year>=1901)) ) REGNUM=5;;
		$(($year>=1837)) ) REGNUM=4;;
		$(($year>=1830)) ) REGNUM=3;;
		$(($year>=1820)) ) REGNUM=2;;
		$(($year>=1801)) ) REGNUM=1;;
		*) REGNUM=0;;
		esac

	[ $REGNUM -eq 0 ] && REGDATE="$month/$day" && REGYEAR=$year
	regdt=$(date -d"${REGDATE[$REGNUM]}" +%-j)
	[ $year -eq ${REGYEAR[$REGNUM]} ] && [[ 10#$doy -lt 10#$regdt ]] && 
		(( REGNUM-=1 )) && regdt=$(date -d"${REGDATE[$REGNUM]}" +%-j)
	if [ $REGNUM -gt 0 ]; then
		(( reg=$year-${REGYEAR[REGNUM]} ))
		[[ 10#$doy -ge 10#$regdt ]] && (( reg+=1 ))
	else reg=0; fi
	[ $year -gt	$(date +%Y) ] && reg=0 # Display up to current year only

	[ $reg -eq 0 ] && reg="" || reg="$reg ${REGNAME[10#$REGNUM]}"
	fi

# Set Julian Period; Truncated Julian Date; DEP jday
(( julp=year+jupconvert ))
if [ $(which jday) ]; then
	tjd=$(echo "$(jday -d $utc)-2440000.5" |bc |cut -f1 -d"." |sed '/\-/d')
	[[ $tjd -lt 1 ]] || [[ $tjd -gt 65535 ]] && unset tjd
else unset tjd; fi

# Set Hanke-Henry date; DEP hh
if [ $HHPC ] && [ $(which hh) ] && [ $year -ge 2018 ]; then
	hhdate=$(hh -W -d$day -m$month -y$year)
else unset HHPC; fi

# Set Erisian date; DEP ddate
if [ $ERISIAN ] && [ $(which ddate) ]; then
	discord=$(ddate +'%{%e %B%} %Y' $day $month $year |sed 's/The //')
	[[ $(echo $discord |grep -E "^5th|50th|Tib's") ]] && dishol=" +"
else unset ERISIAN; fi

# Set Erisian time; DEP klock
[ $KLOCK ] && [ $ymd != $(date +%F) ] && unset KLOCK
if [ $KLOCK ] && [ $(which klock) ]; then
	kloc=$(klock -d$ymd)
	beat=$(klock -d$ymd -kb)
else unset KLOCK; fi

# Hebrew calendar; DEP hebcal
_HC=$(which hebcal)
if [ $HEBREW ] && [ $_HC ]; then
	hebdate=$(hebcal -grh $month $day $year |cut -f2)
	[[ 10#$doy -eq 10#$(date -d $(hebcal -grh Ti 1 $(($hebconvert+$year+1)) |cut -f1) +%-j) ]] && newheb=" !"
else unset HEBREW; fi

# Hijri; DEP gcal
if [ $(which gcal) ]; then
	hijra=$(gcal -e --islamic-civil-holidays --date-format='%>02*M/%>02*D' $year |grep 'New')
	hijri=${hijra:(-10):4}
	hijra=$(cut -f1 -d":" <<<$hijra)
	doycmp=$(date -d"$hijra" +%-j)
	[[ 10#$doy -lt 10#$doycmp ]] && (( hijri-=1 ))
	[[ 10#$doy -eq 10#$doycmp ]] && newhij=" !"
else unset HIJRI; fi

# Baháʼí; DEP gcal
if [ $BAHAI ] && [ $(which gcal) ]; then
	bahyear=$((year-bahconvert))
	# calculate Equinox as observed in Tehran
	equinox=$(gcal -e --astronomical-holidays --date-format='%Y-%>02*M-%>02*D' --time-offset=+04:30 3 $year |
	grep 'Equinox' |cut -f1 -d":")
	doycmp=$(date -d"$equinox" +%-j)
	[[ 10#$doy -ge 10#$doycmp ]] && (( bahyear+=1 ))
	[[ 10#$doy -eq 10#$doycmp ]] && newbah=" !"
	[[ bahyear -le 0 ]] && unset BAHAI
else unset BAHAI; fi

# Masoretic; DEP gcal
(( arc=year+arcconvert ))
if [ $(which gcal) ]; then
	equinox=$(gcal -e --astronomical-holidays --date-format='%Y-%>02*M-%>02*D' \
	--time-offset=$(date -d$year-03-20 +%:z) 3 $year |
	grep 'Equinox' |cut -f1 -d":"); else equinox="$year-03-20"; fi

doycmp=$(date -d "$equinox" +%-j)
[[ 10#$doy -ge 10#$doycmp ]] && (( arc+=1 ))
[[ 10#$doy -eq 10#$doycmp ]] && newarc=" !"

(( mas=year+masconvert ))
(( yod=year+yodconvert ))
(( mkt=year-mktconvert ))

(( ugl=year-uglconvert ))
(( glc=year-glcconvert ))
[[ ugl -le 0 ]] && unset ugl
[[ glc -le 0 ]] && unset glc

# Japanese Era Name
(( jiy=year+jiyconvert ))
case 1 in
	$(($year>=2019))) ERANUM=5;jenconvert=2019;;
	$(($year>=1989))) ERANUM=4;jenconvert=1989;;
	$(($year>=1926))) ERANUM=3;jenconvert=1926;;
	$(($year>=1912))) ERANUM=2;jenconvert=1912;;
	$(($year>=1868))) ERANUM=1;jenconvert=1868;;
	$(($year<1868)))  ERANUM=0;;
	esac
[ $ERANUM -eq 0 ] && unset jen || jen="${ERANAME[10#$ERANUM]:0:1}$(( jen=year-(jenconvert-1) ))"

# Buddhist year calculations
(( buddhist=year+budconvert ))

# main()
if [ $FULLCE ]; then
	case 1 in
		$(($year == 1752)) )
			[ $month -lt 9 ] && yos=true
			[ $month -eq 9 ] && [ $day -lt 14 ] && yos=true;;
		$(($year <  1752)) ) yos=true;; esac

	if [ $yos ]; then printf "%s\n" "$(date -d "$jymd" +"%A %-e %B %Y O.S.")"
	else printf "$bold%s %d %s %d$bold\n" ${DOWL[$dow]} $(( 10#$day )) ${MONTHL[10#$month]} $year; fi; fi

if [ $COMMON ]; then
	printf "$bold";printf "CE %d " $year; [ $_LY ]	&& printf "%s " $LYSYM
				   printf "%s %s ind." "$rnyear" "$ind"
	[ $MTYPE ]	&& printf " %s" "${SYMBOL[$MTYPE]}"; printf "$bold\n"
	[ ! $yos ]	&& printf "Day %d Week %d %3s" $doy $iwn "$ltz"
	[ "$tjd" ]	&& printf " %d" $tjd; printf "\n"

	[ "$reg" ]	&& printf "%s " "$reg"
	[ "$frc" ]	&& printf "FRC %s" "$frc"
	[ $kloc ]	&& printf " %s" "$kloc"
	[ $beat ]	&& printf " %s" "$beat"
	[ "$reg" ] || [ "$frc" ] || [ "$kloc" ] && printf "\n"
	fi

[ $HHPC ]		&& printf "%-17s  H-H %4d\n" "${hhdate::${#hhdate}-5}"   ${hhdate:(-4)}
[ $ERISIAN ]	&& printf "%-16s  YOLD %d%s\n" "${discord::${#discord}-5}" ${discord:(-4)} "$dishol"

[ $HEBREW ]		&& printf "%-18s  AM %d%s\n" "${hebdate::${#hebdate}-6}" ${hebdate:(-4)} "$newheb"
[ $HIJRI ]		&& printf "Hijri               AH %-4d%s\n" $hijri "$newhij"
[ $BAHAI ]		&& printf "Baha'i              BE %4d%s\n" $bahyear "$newbah"

[ $ROME ]		&& printf "City of Rome       AUC %d%s\n" $rome "$newrom"
[ $BYZANTINE ]	&& printf "Byzantine %-4s      AM %d%s\n" "$byzind" $byzantine "$newbyz"

[ $JULIANP ]	&& printf "Julian Period       JP %d\n" $julp

[ $MASORETIC ]	&& printf "Anno Lucis          AL %d\n" $mas
[ $MASORETIC ]	&& printf "Anno Rosae Crucis   AR %d%s\n" $arc "$newarc"
[ $MASORETIC ]	&& printf "Anno Inventionis    AI %d\n"	$yod
[ $MASORETIC ]	&& printf "Anno Ordinis KT     AO %4d\n" $mkt

[ $JAPANIY ]	&& printf "Japanese Imperial  %3s %d\n" "$jen" $jiy
[ $CHINALY ]	&& printf "Chinese Lunar      %3s %d%s\n" "$roc" $cly "$newchi"
[ $BUDDHIST ]	&& printf "Buddhist            BE %d\n"	$buddhist

if [ $VERBOSE ]; then
				   printf "Ides                   %d\n"	$ides

				   printf "Dominical letter       %s\n"	"$dominical"
				   printf "Epact                  %s\n"	"${EPACTS[$golden]}"
				   printf "Golden number          %s\n"	"$golden"

				   printf "Lent                   %s\n"	$(date -d"$(ncal -e $year) -46 days" +%m/%d)
				   printf "Easter                 %s\n"	$(date -d"$(ncal -e $year)" +%m/%d)
				   printf "Advent                 %s\n" $(date -d"11/$(ncal -h 11 $year |awk '/^Th/{print $NF}')+3 days" +%m/%d)

	[ $_HC ]	&& printf "Passover               %s\n" $(hebcal -grh Ni 15 $(($hebconvert+$year))   |cut -f1) |sed 's/....-//;s/-/\//'
	[ $_HC ]	&& printf "Rosh Hashana           %s\n" $(hebcal -grh Ti  1 $(($hebconvert+$year+1)) |cut -f1) |sed 's/....-//;s/-/\//'
	[ $_HC ]	&& printf "Yom Kippur             %s\n" $(hebcal -grh Ti 10 $(($hebconvert+$year+1)) |cut -f1) |sed 's/....-//;s/-/\//'
	[ $hijra ]	&& printf "Hijra                  %s\n" "$hijra"

				   printf "Spring Equinox         %s\n" "${equinox:5}" |sed 's/-/\//'
	[ "$moon" ]	&& printf "Moon phase             %s\n" "$moon"
	[ $jymd ]	&& printf "Julian calendar     %d %s Day %03d\n" "$jdelta" "${jymd:5}" "$jdoy" |sed 's/-/\//'

	[ "$jen" ]	&& printf "Japanese Era           %s\n" "${ERANAME[10#$ERANUM]}"
	[ $cny ] 	&& printf "Chinese New Year       %s %s\n" "${cny:5}" "${ZODIAC[10#$yearof]}" |sed 's/-/\//'

	[ $vsday ]	&& printf "Vassa                  07/%02d\n" $((10#$vsday))
	[ $ugl ]	&& printf "UGLE                   %d\n" $ugl
	[ $glc ]	&& printf "GLC                    %d\n" $glc
	fi

[ ! $HOLDISP ] && [ ! $HOLCACHE ] && exit

# Buddhist observances
if [ "$moon" ]; then
	moon="$moon Uposatha|"
	if [ $FULL ] ; then # only the first full moon
		[ $month -eq 2  ] && moon=${BUDOBS[0]}
		[ $month -eq 5  ] && moon=${BUDOBS[1]}
		[ $month -eq 7  ] && moon=${BUDOBS[2]}
		[ $month -eq 10 ] && moon=${BUDOBS[3]}; fi
	dhol+=$moon; fi
[ $vsday ] && [ $month -eq 7 -a $day -eq $vsday ] && dhol+="Vassa|"

# Chinese observances
[ $cny ] && [ $ymd = $cny ] && dhol+="Year of the ${ZODIAC[10#$yearof]}|"

# Display results
if [ "$dhol" ]; then
	dhol=$(echo -en "$dhol" |sed 's/|/\n/g' |sed 's/^/- /g')
	[ $HOLCACHE ] && unset HOLDISP && echo "$dhol">$HOLTMP
	if [ $HOLDISP ]; then
		testall; [ $t_var ] && echo
		echo "$dhol" |sed "s/^- /&$italics/;s/$/$italics/"; fi; fi
