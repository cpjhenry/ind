#!/bin/bash
# Movable observances, Hebrew calendar & yahrtzeits
# 2019-10-23

app=$(basename $0)
[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$app: 'coreutils' is required." && exit 1
[ $(uname) = 'Darwin' ] && [ ! $(which dateround) ] && echo "$app: 'dateutils' is required." && exit 1
for i in gcal hebcal ind ncal; do [ ! $(which $i) ] && echo "$app: '$i' is required." && exit 1
	done

###
HEADER=
HEBREW=true
EREV=
YAHR=
BUDDHA=true
HIJRI=true
ZODIAC=true
PROXIM=true
XIAN=
###

year=$(date +%Y)
DATEFMT="%m/%d" # DATEFMT="%d %b"
YAHRFILE="$HOME/.calendar/deaths"

while getopts ":jJeYlbhzpxy:HD?" OPTION; do
	case $OPTION in
		j)	# Hebrew
			[ $HEBREW ] && unset HEBREW || HEBREW=true;;
		J)	HEBREW=true
			unset BUDDHA
			unset HIJRI
			unset ZODIAC
			unset PROXIM
			unset XIAN;;
		e)	# Erevs
			EREV=true;;
		Y)	# Yahrzeits
			YAHR=true;;
		l)	# Holiday information
			printf "Movable observances:\n\n"
			printf "Purim              Festival of Lots, deliverance\n"
			printf "Pesach (Passover)  Pilgrimage, the Exodus from Egypt\n"
			printf "Shavuot            Pilgrimage, the giving of the Torah\n"
			printf "Tisha B'Av         Day of Mourning, destruction of the Temples\n"
			printf "Rosh Hashana       New Year\n"
			printf "Yom Kippur         Day of Atonement, fasting\n"
			printf "Sukkot             Pilgrimage, the wandering in the desert\n"
			printf "Chanukah           Festival of Lights, rededication of the Temple\n\n"
			printf "Yahrzeit           Anniversary of the death of a parent or close relative\n"
			exit;;
		b)	# Buddhist
			[ $BUDDHA ] && unset BUDDHA || BUDDHA=true;;
		h)	# Hijri
			[ $HIJRI ] && unset HIJRI || HIJRI=true;;
		z)	# Chinese Zodiac
			[ $ZODIAC ] && unset ZODIAC || ZODIAC=true;;
		p)	# Proximate dates
			[ $PROXIM ] && unset PROXIM || PROXIM=true;;
		x)	# Xian
			[ $XIAN ] && unset XIAN || XIAN=true;;
		y)	# set year
			year=$OPTARG;;
		H)	# header
			[ $HEADER ] && unset HEADER || HEADER=true;;
		D)	# list defaults
			sed -n '/###/{:loop n; /###/q; p; b loop}' $0
			exit;;
		*)	getusage $0
			exit;;
	esac
done

function set_hebrew() {
	excl="/Shabbat/d;/Ta'anit/d"
	subs="s/Pesach/Passover/;s/Tish'a/Tisha/;s/Erev Purim/Fast of Esther/"
	hebdate=$(date -d $(hebcal -rx $1 $2|sed "1d;$excl;$subs" |cut -f1) +"$DATEFMT")
	hebtext=$(hebcal -rx $1 $2 |cut -f2 |sed "1d;$excl;$subs;s/ I//;/1 Candle/s/^/Erev /;s/:.*//")
	dispheb+=$(printf "%s*\t%s|" "$hebdate" "$hebtext")
}
hebyear=$(hebcal -Th 01 01 $year | sed -n 1p | sed 's/.*, //')
[ $HEADER ] && echo "// Generated by '$(basename $0)'"

# Hebrew
if [ $HEBREW ]; then outp=true
	for i in "Adar 14" "Nissan 15" "Sivan 6"; do
		set_hebrew "$i" $hebyear; done

	tishabav=$(hebcal -rh Av 9 $hebyear | cut -f1)
	[[ $(date -d "$tishabav" +%w) == 6 ]] && # !Shabbat
		set_hebrew "$(date -d "$tishabav + 1 day" +"%m %d %Y")" ||
		set_hebrew "$(date -d "$tishabav" +"%m %d %Y")"

	(( hebyear+=1 ))
	for i in "Tishrey 1" "Tishrey 10" "Tishrey 15" "Kislev 25"; do
		set_hebrew "$i" $hebyear; done

	if [ $EREV ]; then
		for i in $(hebcal -rx $year |grep Erev |cut -f1); do
			set_hebrew "$(date -d "$i" +"%m %d %Y")"; done
		set_hebrew "$(date -d $(hebcal -rx $year |grep "1 Candle" |cut -f1) +"%m %d %Y")"
		fi

	# display results
	echo -en "$dispheb" |sed 's/|/\n/g' |sort -Mk2
	fi

if [ $YAHR ] && [ -e $YAHRFILE ]; then [ $outp ] && echo; outp=true
	hebcal -ghY $YAHRFILE $year |sed -e 's/^....-..-..\s/$(date -d& +"$DATEFMT")*/' |
	while read -r line; do eval echo -e "$line" |sed 's/\*/*\tâ˜  /'; done
	fi

# Others
if [ $HIJRI ]; then [ $outp ] && echo; outp=true
	gcal -e --date-format="%1%>02*M/%>02*D%2" --islamic-civil-holidays $year |
	grep --no-messages "(Isl)" |sed -e 's/:\s/*\t/' -e 's/\s*(Isl).*//' \
	-e '/Ramadan/s/$/~/;/Eid-al-Fitr/s/$/~/;/New Year/s/$/~/' \
	-e "s/'s Day//;s/Islamic New Year/Hijra/" |
	grep --no-messages '~' | sed 's/~$//' | uniq -f1
	fi

if [ $BUDDHA ]; then [ $outp ] && echo; outp=true
	ind -y$year -B
	fi

if [ $ZODIAC ]; then [ $outp ] && echo; outp=true
	ind -y$year -Z
	fi

# Dates calculated by their proximity to another date
if [ $PROXIM ]; then [ $outp ] && echo; outp=true
	# Proper Midsummer
	# Saturday immediately following the Summer Solstice
	solstice=$(gcal -e --astronomical-holidays --date-format="%Y-%>02*M-%>02*D" --time-offset=$(date +%:z) \
		6 $year |grep -E Solstice| sed -e 's/:.*//')
	midsummer=$(dateround $solstice --next Saturday)
	[ $EREV ] && printf "%s*\tMidsummer Eve\n" "$(date -d "$midsummer -1 day" +"$DATEFMT")"
	printf "%s*\tMidsummer\n" "$(date -d "$midsummer" +"$DATEFMT")"

	# Commemoration Day --> Sunday nearest July 1st
	hold="$year-07-01"
	dow=$(date -d "$hold" +%w)
	if [ $dow -lt 4 ]; then sunday=$(date -d "$hold - $dow days" +"$DATEFMT")
	else sunday=$(date -d "$hold + $((7-$dow)) days" +"$DATEFMT"); fi
	printf "%s*\tCommemoration Day (NL)\n" "$sunday"

	# Black Friday (&c)
	FourthThuNov="Nov $(ncal -h 11 $year |awk '/^Th/{print $5}')"
	printf "%s*\tBlack Friday\n"	"$(date -d "$FourthThuNov +1 day"  +"$DATEFMT")"
	printf "%s*\tCyber Monday\n"	"$(date -d "$FourthThuNov +4 days" +"$DATEFMT")"
	printf "%s*\tGiving Tuesday\n" 	"$(date -d "$FourthThuNov +5 days" +"$DATEFMT")"

	fi

if [ $XIAN ]; then [ $outp ] && echo
	LastThuNov="Nov $(ncal -h 11 $year |awk '/^Th/{print $NF}')"
	advent="$(date -d"$LastThuNov +3 days" +"$DATEFMT")"
	dpr="$(date -d"$advent $year -11 days" +"$DATEFMT")"

	printf "%s*\tDay of Prayer & Repentance\n" "$dpr"
 	printf "%s*\tAdvent\n" "$advent"

	# Liturgical dates
	printf "%s*\tThe Baptism\n" "$(date +"%m/%d" -d"$(date +"%Y%m%d +7 days -%w days" -d"Jan 6 $year")")"
	fi
